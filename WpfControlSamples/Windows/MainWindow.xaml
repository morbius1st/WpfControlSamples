<!--  ReSharper disable once Xaml.RedundantNamespaceAlias  -->
<Window x:Name="WinMain"
		x:Class="WpfControlSamples.Windows.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:local="clr-namespace:WpfControlSamples.Windows"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		xmlns:dataStructures="clr-namespace:WpfControlSamples.DataStructures"
		xmlns:cs="clr-namespace:WpfControlSamples.Windows.Support"
		Title="MainWindow"
		Height="750"
		Width="1400"
		Foreground="White"
		mc:Ignorable="d"
		DataContext="{Binding ElementName=WinMain}"
		Background="{StaticResource Normal.Window.Background}"
		>

	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<!-- <ResourceDictionary Source="ResourceFiles/XamlResources/MasterColorList.xaml" /> -->
				<!-- <ResourceDictionary Source="ResourceFiles/XamlResources/VisualStates.xaml" /> -->
				<!-- <ResourceDictionary Source="Skin/CyberStudioSkin.xaml" /> -->

				<ResourceDictionary Source="ResourceFiles/XamlResources/File-Open-00.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/Folder-Pair-00.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/Folder-Project-00.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/IconArrowsScrollBar01.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/IconArrowsScrollBar02.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/IconArrowsTree01.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/IconCheckMark.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/IconDash.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/IconHistory.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/IconPlus.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/IconRect.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/IconStar.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/IconTriangle.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/IconTriangleOblique.xaml" />



				<ResourceDictionary Source="Support/CsButtons.xaml" />
				<ResourceDictionary Source="Support/CsCheckBox.xaml" />
				<ResourceDictionary Source="Support/CsComboBox.xaml" />
				<ResourceDictionary Source="Support/CsExpander.xaml" />
				<ResourceDictionary Source="Support/CsScrollBar.xaml" />
				<ResourceDictionary Source="Support/CsScrollViewer.xaml" />
				<ResourceDictionary Source="Support/CsTreeView.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<sys:Double x:Key="BtnWidth">84</sys:Double>
			<sys:Double x:Key="BtnHeight">28</sys:Double>

			<SolidColorBrush x:Key="ItemsControl.Subject.Background.MouseOver" Color="{DynamicResource Blue.600}" />
			<SolidColorBrush x:Key="ItemsControl.Subject.Background.Disabled" Color="{DynamicResource Blue.300}" />
			<SolidColorBrush x:Key="ItemsControl.ListItem.Background.Normal" Color="{DynamicResource Blue.400}" />





			<!--  <Style x:Key="Btn.Std"  -->
			<!--  BasedOn="{StaticResource BtnBase}"  -->
			<!--  TargetType="Button"  -->
			<!--  >  -->
			<!-- 	<Setter Property="Margin" Value="5,0,0,0" /> -->
			<!-- 	<Setter Property="HorizontalAlignment" Value="Right" /> -->
			<!-- 	<Setter Property="VerticalAlignment" Value="Bottom" /> -->
			<!-- 	<Setter Property="Padding" Value="3,0,3,3" /> -->
			<!-- 	<Setter Property="Foreground" Value="{StaticResource Btn.Fg.IsSel}" /> -->
			<!-- 	<Setter Property="Height" Value="{StaticResource Btn.Height.Std}" /> -->
			<!-- 	<Setter Property="Width" Value="{StaticResource Btn.Width.Std}" /> -->
			<!-- 	<Setter Property="Template" Value="{StaticResource Btn.Ct.Std}" /> -->
			<!-- </Style> -->

			<Style x:Key="BtnIconStyle"
					TargetType="Button"
					>
				<Setter Property="Margin" Value="5,0,0,0" />
				<Setter Property="Width" Value="22" />
				<Setter Property="BorderThickness" Value="0" />
				<Setter Property="Padding" Value="0" />
				<Setter Property="Background" Value="Transparent" />
			</Style>


			<Style x:Key="PuBase"
					TargetType="Popup"
					>
				<Setter Property="AllowsTransparency" Value="True" />
				<Setter Property="Margin" Value="10" />
				<Setter Property="HorizontalAlignment" Value="Right" />
				<Setter Property="Focusable" Value="False" />
				<Setter Property="HorizontalOffset" Value="4" />
				<Setter Property="Placement" Value="Bottom" />
				<Setter Property="VerticalOffset" Value="2" />
				<Setter Property="StaysOpen" Value="True" />
				<Setter Property="PopupAnimation" Value="Fade" />
			</Style>


			<Style x:Key="PathHelp.Icon"
					TargetType="Path"
					>
				<Setter Property="Margin" Value="2" />
				<Setter Property="Fill" Value="White" />
				<Setter Property="Stretch" Value="Uniform" />
				<Setter Property="Data" Value="{StaticResource IconHelp}" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="HorizontalAlignment" Value="Center" />
			</Style>

			<Style x:Key="IconStyle"
					TargetType="Path"
					>
				<!-- <Setter Property="Height" Value="24" /> -->
				<Setter Property="Fill" Value="White" />
				<Setter Property="Margin" Value="3,0,3,0" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="HorizontalAlignment" Value="Center" />
				<Setter Property="Stretch" Value="Uniform" />
			</Style>

			<Style x:Key="IconTitleStyle"
					TargetType="TextBlock"
					>
				<Setter Property="HorizontalAlignment" Value="Center" />
				<Setter Property="FontSize" Value="6.0" />
				<Setter Property="Margin" Value="3,0,3,0" />
				<Setter Property="Padding" Value="0" />
				<Setter Property="Foreground" Value="White" />
				<Setter Property="TextDecorations" Value="Underline" />
			</Style>


			<Style x:Key="TbxHelpPopup"
					TargetType="TextBox"
					>
				<Setter Property="Focusable" Value="False" />
				<Setter Property="Padding" Value="4,2,4,3" />
				<Setter Property="Margin" Value="0,1,0,3" />
				<Setter Property="HorizontalAlignment" Value="Stretch" />
				<Setter Property="FontSize" Value="{StaticResource FontSize.Normal}" />
				<Setter Property="Background" Value="WhiteSmoke" />
				<Setter Property="Foreground" Value="Black" />
				<Setter Property="BorderThickness" Value="0" />
				<Setter Property="IsReadOnly" Value="True" />
				<Setter Property="TextAlignment" Value="Left" />
				<Setter Property="TextWrapping" Value="Wrap" />
			</Style>

			<Style x:Key="TblkPopInfoList"
					TargetType="TextBlock"
					>
				<Setter Property="Visibility" Value="Visible" />
				<Setter Property="FontSize" Value="{StaticResource FontSize.Normal}" />
				<Setter Property="Padding" Value="0" />
				<Setter Property="Margin" Value="0" />
				<Setter Property="Background" Value="{StaticResource Pop.Ic.Tblk.Bg}" />
				<Setter Property="Foreground" Value="{StaticResource Pop.Ic.Tblk.Fg}" />
				<Setter Property="LineHeight" Value="{StaticResource Pop.Ic.Tblk.Lh}" />
				<Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
				<Setter Property="TextWrapping" Value="Wrap" />
				<Style.Triggers>
					<Trigger Property="Text" Value="{x:Null}">
						<Setter Property="Visibility" Value="Collapsed" />
					</Trigger>
					<Trigger Property="Text" Value="">
						<Setter Property="Visibility" Value="Collapsed" />
					</Trigger>
				</Style.Triggers>
			</Style>

			<ContentControl x:Key="CcHelpPopup"
					x:Shared="False"
					>
				<ContentControl.ContentTemplate>

					<DataTemplate x:Name="DtHelpPopup">

						<Grid x:Name="GrdPopup"
								Width="{Binding (cs:CustomProperties.GenericDoubleOne), RelativeSource={RelativeSource Self}, FallbackValue=100.0}"
								Focusable="False"
								HorizontalAlignment="Stretch"
								Background="Transparent"
								>

							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="18" />
							</Grid.ColumnDefinitions>

							<Grid.RowDefinitions>
								<RowDefinition Height="*" />
								<RowDefinition Height="*" />

							</Grid.RowDefinitions>

							<Border x:Name="BdrPopup"
									Grid.Column="0"
									Grid.Row="0"
									Margin="0,0,3,0"
									Padding="13,0,2,0"
									Background="{StaticResource Pop.Bdr.Out.Bg}"
									BorderThickness="0,0,0,0"
									BorderBrush="{StaticResource Pop.Bdr.Out}"
									CornerRadius="12,12,0,0"
									>
								<TextBlock x:Name="TblkPopupTitle"
										Focusable="False"
										Margin="0,1,0,2"
										HorizontalAlignment="Stretch"
										FontSize="{StaticResource FontSize.Normal}"
										Background="{StaticResource Pop.Tblk.Ttl.Out.Bg}"
										Foreground="{StaticResource Pop.Tblk.Ttl.Out.Fg}"
										Text="{Binding RelativeSource={RelativeSource Self}, Path=(cs:VisualStates.MainTitle), FallbackValue='This IsEnabled Title Text'}"
										FontWeight="DemiBold"
										/>
							</Border>

							<Button x:Name="BtnClosePopup"
									Grid.Column="1"
									Grid.Row="0"
									Focusable="False"
									FontFamily="Segoe UI Symbol"
									Background="{StaticResource Pop.Btn.Cls.Bg}"
									Foreground="{StaticResource Pop.Btn.Cls.Fg}"
									>
								<!--  Click="BtnPopupClose_OnClick"  -->
								<Button.Content>
									<Path
											Data="{StaticResource IconClose}"
											Fill="White"
											Stretch="Uniform"
											/>
								</Button.Content>
							</Button>

							<Border x:Name="BdrPopupInner"
									Grid.Column="0"
									Grid.Row="1"
									Margin="0,0,3,0"
									Padding="9,0,6,2"
									BorderThickness="0"
									CornerRadius="0,0,12,12"
									Background="{StaticResource Pop.Bdr.In.Bg}"
									>



								<!-- <Border.Background> -->
								<!-- 	<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1"> -->
								<!-- 		<GradientStop Offset="0" Color="#E100FF00" /> -->
								<!-- 		<GradientStop Offset="1" Color="#FF00C400" /> -->
								<!-- 		<GradientStop Offset="0.9" Color="#FB003800" /> -->
								<!-- 	</LinearGradientBrush> -->
								<!-- </Border.Background> -->

								<DockPanel
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch"
										Margin="4"
										>

									<TextBox x:Name="TbxPopupInnerTitle"
											DockPanel.Dock="Top"
											Margin="0"
											FontWeight="DemiBold"
											VerticalAlignment="Top"
											Text="{Binding RelativeSource={RelativeSource Self}, Path=(cs:VisualStates.MainDescription), FallbackValue='This is main description text'}"
											Background="{StaticResource Pop.Tblk.Ttl.In.Bg}"
											Foreground="{StaticResource Pop.Tblk.Ttl.In.Fg}"
											Style="{StaticResource TbxHelpPopup}"
											>
										<TextBox.Resources>
											<Style TargetType="Border">
												<Setter Property="CornerRadius" Value="{StaticResource CornerRadius.Std}">
												</Setter>
											</Style>
										</TextBox.Resources>

									</TextBox>

									<ItemsControl
											BorderThickness="0"
											Background="{StaticResource Pop.Ic.Bg}"
											VerticalAlignment="Stretch"
											HorizontalContentAlignment="Left"
											FontSize="{StaticResource FontSize.Normal}"
											Margin="0,5,0,0"
											Padding="7"
											Focusable="False"
											DataContext="{Binding (cs:VisualStates.MainInfo), RelativeSource={RelativeSource Self}}"
											ItemsSource="{Binding}"
											>
										<ItemsControl.Resources>
											<Style TargetType="Border">
												<Setter Property="CornerRadius" Value="8">
												</Setter>
											</Style>
										</ItemsControl.Resources>

										<ItemsControl.ItemTemplate>
											<DataTemplate>
												<Grid
														Margin="{Binding Marg}"
														HorizontalAlignment="Stretch"
														>

													<Grid.ColumnDefinitions>
														<ColumnDefinition x:Name="Index0"
																Width="{StaticResource Pop.Col0}"
																/>
														<ColumnDefinition x:Name="Index1"
																Width="{StaticResource Pop.Col1}"
																/>
														<ColumnDefinition x:Name="Index2"
																Width="{StaticResource Pop.Col2}"
																/>
														<ColumnDefinition x:Name="Index3"
																Width="{StaticResource Pop.Col3}"
																/>
														<ColumnDefinition x:Name="Index4"
																Width="*"
																/>
													</Grid.ColumnDefinitions>
													<!--  bold title / margin 4 abv + 2 below  -->
													<TextBlock x:Name="Col0_0"
															Grid.Column="0"
															Grid.ColumnSpan="5"
															Text="{Binding HelpDesc[0], Mode=OneWay, TargetNullValue=''}"
															Style="{StaticResource TblkPopInfoList}"
															/>
													<!--  sub-title / margin 4 abv + 2 below  -->
													<TextBlock x:Name="Col0_1"
															Grid.Column="0"
															Grid.ColumnSpan="5"
															FontWeight="DemiBold"
															Text="{Binding HelpDesc[1], Mode=OneWay, TargetNullValue=''}"
															Style="{StaticResource TblkPopInfoList}"
															/>
													<!--  far left - bullet or text  -->
													<TextBlock x:Name="Col0_2"
															Grid.Column="0"
															Grid.ColumnSpan="5"
															Text="{Binding HelpDesc[2], Mode=OneWay, TargetNullValue=''}"
															Style="{StaticResource TblkPopInfoList}"
															/>
													<!--  text at col 1  -->
													<TextBlock x:Name="Col1"
															Grid.Column="1"
															Grid.ColumnSpan="4"
															Text="{Binding HelpDesc[3], Mode=OneWay, TargetNullValue=''}"
															Style="{StaticResource TblkPopInfoList}"
															/>
													<!--  text at col 2  -->
													<TextBlock x:Name="Col2"
															Grid.Column="2"
															Grid.ColumnSpan="3"
															Text="{Binding HelpDesc[4], Mode=OneWay, TargetNullValue=''}"
															Style="{StaticResource TblkPopInfoList}"
															/>
													<!--  text at col 3  -->
													<TextBlock x:Name="Col3"
															Grid.Column="3"
															Grid.ColumnSpan="2"
															Text="{Binding HelpDesc[5], Mode=OneWay, TargetNullValue=''}"
															Style="{StaticResource TblkPopInfoList}"
															/>
													<!--  text at col 4  -->
													<TextBlock x:Name="Col4"
															Grid.Column="4"
															Text="{Binding HelpDesc[6], Mode=OneWay, TargetNullValue=''}"
															Style="{StaticResource TblkPopInfoList}"
															/>

												</Grid>
											</DataTemplate>
										</ItemsControl.ItemTemplate>

									</ItemsControl>

								</DockPanel>
							</Border>

						</Grid>
					</DataTemplate>



					<!-- voided

					<DataTemplate x:Name="DtPopup">

						<Grid x:Name="GrdPopup"
								Width="{TemplateBinding Width}"
								Focusable="False"
								HorizontalAlignment="Stretch"
								Background="Transparent"
								>

							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="18" />
							</Grid.ColumnDefinitions>

							<Grid.RowDefinitions>
								<RowDefinition Height="*" />
								<RowDefinition Height="*" />

							</Grid.RowDefinitions>


							<Border x:Name="BdrPopup"
									Grid.Column="0"
									Grid.Row="0"
									Margin="0,0,3,0"
									Padding="13,0,2,0"
									Background="#e100FF00"
									BorderThickness="0,0,0,0"
									BorderBrush="#e100FF00"
									CornerRadius="12,12,0,0"
									>
								<TextBlock x:Name="TblkPopupTitle"
										Focusable="False"
										Margin="0"
										HorizontalAlignment="Stretch"
										FontSize="{StaticResource FontSize.Normal}"
										Background="Transparent"
										Foreground="Black"
										Text="{Binding RelativeSource={RelativeSource Self}, Path=(cs:VisualStates.TitleText), FallbackValue='This IsEnabled Title Text'}"
										/>
							</Border>

							<Button x:Name="BtnClosePopup"
									Grid.Column="1"
									Grid.Row="0"
									Focusable="False"
									FontFamily="Segoe UI Symbol"
									Background="LimeGreen"
									Foreground="White"
									>

								<Button.Content>
									<Path
											Data="{StaticResource IconClose}"
											Fill="White"
											Stretch="Uniform"
											/>
								</Button.Content>
							</Button>

							<Border x:Name="BdrPopupInner"
									Grid.Column="0"
									Grid.Row="1"
									Margin="0,0,3,0"
									Padding="10,0,4,4"
									BorderThickness="0"
									CornerRadius="0,0,12,12"
									>
								<Border.Background>
									<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
										<GradientStop Offset="0" Color="#E100FF00" />
										<GradientStop Offset="1" Color="#FF00C400" />
										<GradientStop Offset="0.9" Color="#FB003800" />
									</LinearGradientBrush>
								</Border.Background>

								<TextBox x:Name="TbxPopupInner"
										Focusable="False"
										Padding="2"
										HorizontalAlignment="Stretch"
										FontSize="{StaticResource FontSize.Normal}"
										Background="WhiteSmoke"
										Foreground="Black"
										BorderThickness="0"
										IsReadOnly="True"
										Text="{Binding RelativeSource={RelativeSource Self}, Path=(cs:VisualStates.MainContent), FallbackValue='Fallback text this is a second line of help text'}"
										TextAlignment="Left"
										TextWrapping="Wrap"
										>
									<TextBox.Resources>
										<Style TargetType="{x:Type Border}">
											<Setter Property="CornerRadius" Value="8">
											</Setter>
										</Style>
									</TextBox.Resources>
								</TextBox>

							</Border>

						</Grid>
					</DataTemplate>

					-->

				</ContentControl.ContentTemplate>

			</ContentControl>





			<!--    -->
			<!-- <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181" /> -->
			<!-- <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF" /> -->
			<!-- <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7" /> -->
			<!-- <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB" /> -->
			<!-- <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626" /> -->
			<!-- <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959" /> -->
			<!-- <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7" /> -->
			<!-- <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB" /> -->
			<!--    -->
			<!--  <PathGeometry x:Key="TreeArrow"  -->
			<!--  Figures="M0,0 L0,6 L6,0 z"  -->
			<!--  />  -->
			<!--    -->
			<!--  <Style x:Key="ExpandCollapseToggleStyle"  -->
			<!--  TargetType="{x:Type ToggleButton}"  -->
			<!--  >  -->
			<!-- 	<Setter Property="Focusable" Value="False" /> -->
			<!-- 	<Setter Property="Width" Value="16" /> -->
			<!-- 	<Setter Property="Height" Value="16" /> -->
			<!-- 	<Setter Property="Template"> -->
			<!-- 		<Setter.Value> -->
			<!-- 			<ControlTemplate TargetType="{x:Type ToggleButton}"> -->
			<!--  <Border  -->
			<!--  Height="16"  -->
			<!--  Width="16"  -->
			<!--  Background="Transparent"  -->
			<!--  Padding="5,5,5,5"  -->
			<!--  >  -->
			<!--  <Path x:Name="ExpandPath"  -->
			<!--  Data="{StaticResource TreeArrow}"  -->
			<!--  Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}"  -->
			<!--  Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}"  -->
			<!--  >  -->
			<!-- 						<Path.RenderTransform> -->
			<!-- 							<RotateTransform Angle="135" CenterY="3" CenterX="3" /> -->
			<!-- 						</Path.RenderTransform> -->
			<!-- 					</Path> -->
			<!-- 				</Border> -->
			<!-- 				<ControlTemplate.Triggers> -->
			<!-- 					<Trigger Property="IsChecked" Value="True"> -->
			<!-- 						<Setter Property="RenderTransform" TargetName="ExpandPath"> -->
			<!-- 							<Setter.Value> -->
			<!-- 								<RotateTransform Angle="180" CenterY="3" CenterX="3" /> -->
			<!-- 							</Setter.Value> -->
			<!-- 						</Setter> -->
			<!-- 						<Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}" /> -->
			<!-- 						<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}" /> -->
			<!-- 					</Trigger> -->
			<!-- 					<Trigger Property="IsMouseOver" Value="True"> -->
			<!-- 						<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" /> -->
			<!-- 						<Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" /> -->
			<!-- 					</Trigger> -->
			<!-- 					<MultiTrigger> -->
			<!-- 						<MultiTrigger.Conditions> -->
			<!-- 							<Condition Property="IsMouseOver" Value="True" /> -->
			<!-- 							<Condition Property="IsChecked" Value="True" /> -->
			<!-- 						</MultiTrigger.Conditions> -->
			<!-- 						<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" /> -->
			<!-- 						<Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}" /> -->
			<!-- 					</MultiTrigger> -->
			<!-- 				</ControlTemplate.Triggers> -->
			<!-- 			</ControlTemplate> -->
			<!-- 		</Setter.Value> -->
			<!-- 	</Setter> -->
			<!-- </Style> -->
			<!--    -->
			<!-- <Style x:Key="TreeViewItemFocusVisual"> -->
			<!-- 	<Setter Property="Control.Template"> -->
			<!-- 		<Setter.Value> -->
			<!-- 			<ControlTemplate> -->
			<!-- 				<Rectangle /> -->
			<!-- 			</ControlTemplate> -->
			<!-- 		</Setter.Value> -->
			<!-- 	</Setter> -->
			<!-- </Style> -->
			<!--    -->
			<!--  ~1~  <Style x:Key="TreeViewItemContainerStyle1"  @1@  -->
			<!--  ~1~  TargetType="{x:Type TreeViewItem}"  @1@  -->
			<!--  ~1~  >  @1@  -->
			<!--    -->
			<!-- <Style TargetType="{x:Type TreeViewItem}"> -->
			<!-- 	<Setter Property="Background" Value="Transparent" /> -->
			<!-- 	<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" /> -->
			<!-- 	<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" /> -->
			<!-- 	<Setter Property="Padding" Value="1,0,0,0" /> -->
			<!-- 	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" /> -->
			<!-- 	<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" /> -->
			<!-- 	<Setter Property="Template"> -->
			<!-- 		<Setter.Value> -->
			<!-- 			<ControlTemplate TargetType="{x:Type TreeViewItem}"> -->
			<!-- 				<Grid> -->
			<!-- 					<Grid.ColumnDefinitions> -->
			<!--  <ColumnDefinition  -->
			<!--  Width="Auto"  -->
			<!--  MinWidth="19"  -->
			<!--  />  -->
			<!-- 						~1~ <ColumnDefinition Width="Auto" /> @1@ -->
			<!-- 						<ColumnDefinition Width="*" /> -->
			<!-- 					</Grid.ColumnDefinitions> -->
			<!-- 					<Grid.RowDefinitions> -->
			<!-- 						<RowDefinition Height="Auto" /> -->
			<!-- 						<RowDefinition /> -->
			<!-- 					</Grid.RowDefinitions> -->
			<!--  <ToggleButton x:Name="Expander"  -->
			<!--  ClickMode="Press"  -->
			<!--  IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"  -->
			<!--  Style="{StaticResource ExpandCollapseToggleStyle}"  -->
			<!--  />  -->
			<!--  <Border x:Name="Bd"  -->
			<!--  Grid.Column="1"  -->
			<!--  Grid.Row="0"  -->
			<!--  Background="{TemplateBinding Background}"  -->
			<!--  BorderBrush="{TemplateBinding BorderBrush}"  -->
			<!--  BorderThickness="{TemplateBinding BorderThickness}"  -->
			<!--  Padding="{TemplateBinding Padding}"  -->
			<!--  SnapsToDevicePixels="true"  -->
			<!--  >  -->
			<!--  <ContentPresenter x:Name="PART_Header"  -->
			<!--  ContentSource="Header"  -->
			<!--  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  -->
			<!--  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  -->
			<!--  />  -->
			<!-- 					</Border> -->
			<!--  <ItemsPresenter x:Name="ItemsHost"  -->
			<!--  Grid.Column="1"  -->
			<!--  Grid.Row="1"  -->
			<!--  />  -->
			<!-- 				</Grid> -->
			<!-- 				<ControlTemplate.Triggers> -->
			<!-- 					<Trigger Property="IsExpanded" Value="false"> -->
			<!-- 						<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed" /> -->
			<!-- 					</Trigger> -->
			<!-- 					<Trigger Property="HasItems" Value="false"> -->
			<!-- 						<Setter Property="Visibility" TargetName="Expander" Value="Hidden" /> -->
			<!-- 					</Trigger> -->
			<!-- 					<Trigger Property="IsSelected" Value="true"> -->
			<!-- 						<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" /> -->
			<!-- 						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" /> -->
			<!-- 					</Trigger> -->
			<!-- 					<MultiTrigger> -->
			<!-- 						<MultiTrigger.Conditions> -->
			<!-- 							<Condition Property="IsSelected" Value="true" /> -->
			<!-- 							<Condition Property="IsSelectionActive" Value="false" /> -->
			<!-- 						</MultiTrigger.Conditions> -->
			<!-- 						<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" /> -->
			<!-- 						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" /> -->
			<!-- 					</MultiTrigger> -->
			<!-- 					<Trigger Property="IsEnabled" Value="false"> -->
			<!-- 						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" /> -->
			<!-- 					</Trigger> -->
			<!-- 				</ControlTemplate.Triggers> -->
			<!-- 			</ControlTemplate> -->
			<!-- 		</Setter.Value> -->
			<!-- 	</Setter> -->
			<!-- 	<Style.Triggers> -->
			<!-- 		<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true"> -->
			<!-- 			<Setter Property="ItemsPanel"> -->
			<!-- 				<Setter.Value> -->
			<!-- 					<ItemsPanelTemplate> -->
			<!-- 						<VirtualizingStackPanel /> -->
			<!-- 					</ItemsPanelTemplate> -->
			<!-- 				</Setter.Value> -->
			<!-- 			</Setter> -->
			<!-- 		</Trigger> -->
			<!-- 	</Style.Triggers> -->
			<!-- </Style> -->



		</ResourceDictionary>
	</Window.Resources>

	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="200" />
			<ColumnDefinition Width="550" />
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="120" />
		</Grid.ColumnDefinitions>

		<Grid.RowDefinitions>
			<RowDefinition Height="*" />
			<RowDefinition Height="40" />
		</Grid.RowDefinitions>


		<StackPanel
				Grid.Column="0"
				Grid.Row="0"
				Orientation="Vertical"
				>
			<TextBox
					Height="300"
					Text="{Binding Msg}"
					Foreground="White"
					HorizontalScrollBarVisibility="Visible"
					VerticalScrollBarVisibility="Visible"
					Background="Transparent"
					>
				<TextBox.Resources>
					<Style TargetType="{x:Type ScrollViewer}">
						<Setter Property="Template" Value="{StaticResource CsScrollViewerCt}" />
						<Setter Property="cs:CsScrollBarAp.ScrollBarWidth" Value="15" />
						<Setter Property="cs:CsScrollBarAp.RepeatButtonLength" Value="15" />
						<Setter Property="cs:CsScrollBarAp.RepeatButtonIconLength" Value="12" />
						<Setter Property="cs:CsScrollBarAp.RepeatButtonIconGirth" Value="8" />
					</Style>
				</TextBox.Resources>

			</TextBox>

			<ScrollViewer x:Name="Sv1"
					Grid.Column="1"
					Grid.Row="0"
					Grid.RowSpan="4"
					Foreground="Aqua"
					HorizontalScrollBarVisibility="Visible"
					Padding="5"
					VerticalScrollBarVisibility="Visible"
					cs:CsScrollBarAp.HorizBorderColor="blue"
					cs:CsScrollBarAp.HorizBorderThickness="0,1,1,0"
					cs:CsScrollBarAp.HorizontalCornerRadius="6"
					cs:CsScrollBarAp.ScrollBarWidth="12"
					cs:CsScrollBarAp.ThumbCornerRadius="3"
					cs:CsScrollBarAp.TrackWidth="6"
					cs:CsScrollBarAp.VertBorderColor="LawnGreen"
					cs:CsScrollBarAp.VertBorderThickness="1,0,0,1"
					cs:CsScrollBarAp.VerticalCornerRadius="8"
					cs:CsScrollViewerAp.ScrollViewerBorderColor="LawnGreen"
					cs:CsScrollViewerAp.ScrollViewerBorderThickness="1,1,4,6"
					cs:CsScrollViewerAp.ScrollViewerCornerRadius="4"
					Template="{StaticResource CsScrollViewerCt}"
					>
				<!--  custom:CsScrollViewer.CornerRectLeftBdrColor="LawnGreen"  -->
				<!--  custom:CsScrollViewer.CornerRectLeftBdrThickness="1"  -->
				<!--  custom:CsScrollViewer.CornerRectTopBdrColor="Blue"  -->
				<!--  custom:CsScrollViewer.CornerRectTopBdrThickness="1"  -->

				<ScrollViewer.Content>
					<StackPanel>
						<ContentControl>now is the time for all good men to come to the air of their country</ContentControl>
						<ContentControl>now is the time for all good men to come to the air of their country</ContentControl>
						<ContentControl>now is the time for all good men to come to the air of their country</ContentControl>
						<ContentControl>now is the time for all good men to come to the air of their country</ContentControl>
						<ContentControl>now is the time for all good men to come to the air of their country</ContentControl>
						<ContentControl>now is the time for all good men to come to the air of their country</ContentControl>
						<ContentControl>now is the time for all good men to come to the air of their country</ContentControl>
						<ContentControl>now is the time for all good men to come to the air of their country</ContentControl>
						<ContentControl>now is the time for all good men to come to the air of their country</ContentControl>
						<ContentControl>now is the time for all good men to come to the air of their country</ContentControl>
						<ContentControl>now is the time for all good men to come to the air of their country</ContentControl>
					</StackPanel>
				</ScrollViewer.Content>
			</ScrollViewer>


		</StackPanel>


		<StackPanel
				Grid.Column="1"
				Grid.Row="0"
				>

			<StackPanel
					Margin="5,10,0,0"
					Orientation="Vertical"
					>
				<TextBlock
						Text="CheckBox Style"
						Foreground="White"
						/>

				<StackPanel
						Height="15"
						Margin="0,5,0,0"
						Orientation="Horizontal"
						>

					<CheckBox
							Margin="0,0,0,0"
							IsChecked="False"
							Style="{StaticResource Lv1.CheckboxStyle}"
							/>
					<CheckBox
							Margin="10,0,0,0"
							IsChecked="True"
							Style="{StaticResource Lv1.CheckboxStyle}"
							/>
					<CheckBox
							Margin="10,0,0,0"
							IsEnabled="False"
							IsChecked="True"
							Style="{StaticResource Lv1.CheckboxStyle}"
							/>

				</StackPanel>

				<StackPanel
						Height="18"
						Margin="0,5,0,0"
						Orientation="Horizontal"
						>

					<CheckBox
							Margin="0,0,0,0"
							IsChecked="False"
							BorderThickness="0"
							cs:CsCheckBoxAp.CheckBoxBoxSize="12"
							cs:CsCheckBoxAp.CheckBoxCheckMargin="-2"
							cs:CsCheckBoxAp.CheckBoxContentMargin="1,1,1,1"
							cs:CsCheckBoxAp.OptionMarkFillBrush="Red"
							cs:CsCheckBoxAp.IndeterminantMarkFillBrush="Red"
							Style="{StaticResource Lv1.CheckboxStyle2}"
							/>
					<CheckBox
							Margin="10,0,0,0"
							IsChecked="True"
							BorderThickness="0"
							cs:CsCheckBoxAp.CheckBoxBoxSize="12"
							cs:CsCheckBoxAp.CheckBoxCheckMargin="-2"
							cs:CsCheckBoxAp.CheckBoxContentMargin="1,1,1,1"
							cs:CsCheckBoxAp.OptionMarkFillBrush="Red"
							cs:CsCheckBoxAp.IndeterminantMarkFillBrush="Red"
							Style="{StaticResource Lv1.CheckboxStyle2}"
							/>
					<CheckBox
							Margin="10,0,0,0"
							IsEnabled="False"
							IsChecked="True"
							BorderThickness="0"
							cs:CsCheckBoxAp.CheckBoxBoxSize="12"
							cs:CsCheckBoxAp.CheckBoxCheckMargin="-2"
							cs:CsCheckBoxAp.CheckBoxContentMargin="1,1,1,1"
							cs:CsCheckBoxAp.OptionMarkFillBrush="Red"
							cs:CsCheckBoxAp.IndeterminantMarkFillBrush="Red"
							Style="{StaticResource Lv1.CheckboxStyle2}"
							/>
					<CheckBox
							Margin="10,0,0,0"
							IsEnabled="true"
							IsChecked="{x:Null}"
							BorderThickness="0"
							IsThreeState="True"
							cs:CsCheckBoxAp.CheckBoxBoxSize="12"
							cs:CsCheckBoxAp.CheckBoxCheckMargin="-2"
							cs:CsCheckBoxAp.CheckBoxContentMargin="1,1,1,1"
							cs:CsCheckBoxAp.OptionMarkFillBrush="Red"
							cs:CsCheckBoxAp.IndeterminantMarkFillBrush="Red"
							Style="{StaticResource Lv1.CheckboxStyle2}"
							/>
					<CheckBox
							Margin="10,0,0,0"
							IsEnabled="False"
							IsChecked="{x:Null}"
							BorderThickness="0"
							IsThreeState="True"
							cs:CsCheckBoxAp.CheckBoxBoxSize="12"
							cs:CsCheckBoxAp.CheckBoxCheckMargin="-2"
							cs:CsCheckBoxAp.CheckBoxContentMargin="1,1,1,1"
							cs:CsCheckBoxAp.OptionMarkFillBrush="Red"
							cs:CsCheckBoxAp.IndeterminantMarkFillBrush="Red"
							Style="{StaticResource Lv1.CheckboxStyle2}"
							/>

				</StackPanel>



			</StackPanel>

			<StackPanel
					Margin="5,10,0,0"
					Orientation="Vertical"
					>

				<TextBlock
						Text="ComboBox Style"
						Foreground="White"
						/>

				<ComboBox
						Width="250"
						HorizontalAlignment="Left"
						VerticalAlignment="Top"
						ItemsSource="{Binding DictItems}"
						DisplayMemberPath="Value.Name"
						SelectedValue="{Binding Di}"
						SelectedValuePath="Value"
						BorderThickness="2"
						BorderBrush="Blue"
						FocusVisualStyle="{x:Null}"
						FontSize="12"
						HorizontalContentAlignment="Stretch"
						Margin="0,5,0,0"
						MaxDropDownHeight="150"
						cs:CsComboBoxAp.ComboBoxBdrRadius="6.0"
						cs:CsComboBoxAp.DropDownBrush="{StaticResource ItemsControl.ListItem.Background.Normal}"
						cs:CsComboBoxAp.DropDownMaxWidth="240.0"
						cs:CsScrollBarAp.ScrollBarWidth="15"
						Style="{StaticResource CsComboBoxStyle}"
						/>
			</StackPanel>

			<StackPanel
					Margin="5,10,0,0"
					Orientation="Vertical"
					>

				<TextBlock
						Text="Button Styles"
						Foreground="White"
						/>

				<StackPanel
						Margin="0,10,0,0"
						Orientation="Horizontal"
						>
					<Button
							Content="BtnStd Style"
							Height="{StaticResource BtnHeight}"
							Width="{StaticResource BtnWidth}"
							Margin="0,0,10,0"
							Style="{StaticResource Btn.Std}"
							Click="BtnShoDict1_OnClick"
							/>

					<Button
							Content="BtnStd Style"
							Height="{StaticResource BtnHeight}"
							Width="{StaticResource BtnWidth}"
							IsEnabled="False"
							Margin="0,0,10,0"
							Style="{StaticResource Btn.Std}"
							Click="BtnShoDict1_OnClick"
							/>


					<Button
							Content="BtnStd Style"
							Height="{StaticResource BtnHeight}"
							Width="{StaticResource BtnWidth}"
							IsDefault="True"
							Margin="0,0,10,0"
							Style="{StaticResource Btn.Std}"
							Click="BtnShoDict1_OnClick"
							/>

					<Button
							Content="BtnStd Style"
							Height="{StaticResource BtnHeight}"
							Width="{StaticResource BtnWidth}"
							IsDefault="True"
							IsEnabled="False"
							Margin="0,0,10,0"
							Style="{StaticResource Btn.Std}"
							Click="BtnShoDict1_OnClick"
							/>


				</StackPanel>

				<StackPanel
						Margin="0,10,0,0"
						Orientation="Horizontal"
						>

					<Button
							Content="BtnStealth Style"
							Height="{StaticResource BtnHeight}"
							Padding="4,0,4,0"
							Margin="0,0,10,0"
							Style="{StaticResource Btn.Stealth}"
							Click="BtnShoDict1_OnClick"
							/>

					<Button x:Name="BtnDelete"
							DockPanel.Dock="Left"
							Height="24"
							Width="32"
							HorizontalAlignment="Left"
							Foreground="White"
							Margin="0,0,5,0"
							Template="{StaticResource Btn.Ct.Std}"
							>
						<Button.Background>
							<SolidColorBrush Color="{StaticResource Deep.Orange.500}" />
						</Button.Background>
						<Path
								Fill="White"
								Margin="0,0,3,2"
								HorizontalAlignment="Center"
								Data="{StaticResource IconDelete}"
								/>

					</Button>

					<Button x:Name="BtnListCtrlsHelp"
							DockPanel.Dock="Left"
							Height="24"
							Width="28"
							HorizontalAlignment="Left"
							Foreground="White"
							Margin="0,0,5,0"
							IsEnabled="True"
							cs:CustomProperties.GenericPopupOne="{Binding ElementName=PuListControls}"
							Template="{StaticResource Btn.Ct.Std}"
							>
						<Button.Background>
							<SolidColorBrush Color="{StaticResource Blue.450}" />
						</Button.Background>

						<Button.Content>
							<Path x:Name="PathListCtrlsHelp"
									Style="{StaticResource PathHelp.Icon}"
									>
							</Path>
						</Button.Content>
					</Button>


					<Popup Name="PuListControls"
							DockPanel.Dock="Right"
							cs:VisualStates.MainTitle="Title"
							cs:VisualStates.MainDescription="Description"
							cs:VisualStates.MainInfo="{x:Static local:MainWindow.CtrlsDlgHelpInfo}"
							cs:CustomProperties.GenericDoubleOne="{StaticResource Pop.Std.Width}"
							Child="{StaticResource CcHelpPopup}"
							Style="{StaticResource PuBase}"
							>
						<!--  PlacementTarget="{Binding ElementName=BtnListCtrlsHelp}"  -->

					</Popup>



				</StackPanel>

				<StackPanel
						Margin="0,10,0,0"
						Orientation="Vertical"
						>

					<TextBlock
							Text="Path Icons"
							Foreground="White"
							/>
					<StackPanel Orientation="Vertical">

						<Grid
								Margin="5,3,0,0"
								HorizontalAlignment="Left"
								>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>

							<Grid.RowDefinitions>
								<RowDefinition Height="14" />
								<RowDefinition Height="24" />
							</Grid.RowDefinitions>

							<TextBlock
									Grid.Column="0"
									Grid.Row="0"
									Text="IconDelete"
									Style="{StaticResource IconTitleStyle}"
									/>
							<Path
									Grid.Column="0"
									Grid.Row="1"
									Stretch="Uniform"
									Data="{StaticResource IconDelete}"
									Style="{StaticResource IconStyle}"
									/>

							<TextBlock
									Grid.Column="1"
									Grid.Row="0"
									Text="IconPadLock"
									Style="{StaticResource IconTitleStyle}"
									/>
							<Path
									Grid.Column="1"
									Grid.Row="1"
									Data="{StaticResource IconPadLock}"
									Style="{StaticResource IconStyle}"
									/>

							<TextBlock
									Grid.Column="2"
									Grid.Row="0"
									Text="IconPadLock2"
									Style="{StaticResource IconTitleStyle}"
									/>
							<Path
									Grid.Column="2"
									Grid.Row="1"
									Data="{StaticResource IconPadLock2}"
									Style="{StaticResource IconStyle}"
									/>

							<TextBlock
									Grid.Column="3"
									Grid.Row="0"
									Text="IconReadOnly"
									Style="{StaticResource IconTitleStyle}"
									/>
							<Path
									Grid.Column="3"
									Grid.Row="1"
									Data="{StaticResource IconReadOnly}"
									Style="{StaticResource IconStyle}"
									/>

							<TextBlock
									Grid.Column="4"
									Grid.Row="0"
									Text="IconClose"
									Style="{StaticResource IconTitleStyle}"
									/>
							<Path
									Grid.Column="4"
									Grid.Row="1"
									Data="{StaticResource IconClose}"
									Style="{StaticResource IconStyle}"
									/>

							<TextBlock
									Grid.Column="5"
									Grid.Row="0"
									Text="IconApply"
									Style="{StaticResource IconTitleStyle}"
									/>
							<Path
									Grid.Column="5"
									Grid.Row="1"
									Data="{StaticResource IconApply}"
									Style="{StaticResource IconStyle}"
									/>

							<TextBlock
									Grid.Column="6"
									Grid.Row="0"
									Text="IconReset"
									Style="{StaticResource IconTitleStyle}"
									/>
							<Path
									Grid.Column="6"
									Grid.Row="1"
									Data="{StaticResource IconReset}"
									Style="{StaticResource IconStyle}"
									/>

							<TextBlock
									Grid.Column="7"
									Grid.Row="0"
									Text="IconIsSelected"
									Style="{StaticResource IconTitleStyle}"
									/>
							<Path
									Grid.Column="7"
									Grid.Row="1"
									Data="{StaticResource IconIsSelected}"
									Style="{StaticResource IconStyle}"
									/>

							<TextBlock
									Grid.Column="8"
									Grid.Row="0"
									Text="IconClearText"
									Style="{StaticResource IconTitleStyle}"
									/>
							<Path
									Grid.Column="8"
									Grid.Row="1"
									Data="{StaticResource IconClearText}"
									Style="{StaticResource IconStyle}"
									/>



						</Grid>


						<StackPanel
								Margin="0,10,0,0"
								Orientation="Horizontal"
								>


							<Path
									Data="{StaticResource Direction.Arrow.Geom}"
									Style="{StaticResource IconStyle}"
									/>

							<Path
									Height="12"
									Width="12"
									Margin="5,0,0,0"
									Data="{StaticResource Icon.Arrow.Left}"
									Style="{StaticResource IconStyle}"
									/>

							<Path
									Height="12"
									Width="12"
									Margin="5,0,0,0"
									Data="{StaticResource Icon.Arrow.Up}"
									Style="{StaticResource IconStyle}"
									/>
							<Path
									Height="12"
									Width="12"
									Margin="5,0,0,0"
									Data="{StaticResource Icon.Arrow.Right}"
									Style="{StaticResource IconStyle}"
									/>
							<Path
									Height="12"
									Width="12"
									Margin="5,0,0,0"
									Data="{StaticResource Icon.Arrow.Down}"
									Style="{StaticResource IconStyle}"
									/>


							<Path
									Height="12"
									Margin="5,0,0,0"
									Data="{StaticResource Icon.Arrow.Left2}"
									Style="{StaticResource IconStyle}"
									/>

							<Path
									Height="10"
									Margin="5,0,0,0"
									Data="{StaticResource Icon.Arrow.Up2}"
									Style="{StaticResource IconStyle}"
									/>

							<Path
									Height="12"
									Margin="5,0,0,0"
									Data="{StaticResource Icon.Arrow.Right2}"
									Style="{StaticResource IconStyle}"
									/>
							<Path
									Height="10"
									Margin="5,0,0,0"
									Data="{StaticResource Icon.Arrow.Dn2}"
									Style="{StaticResource IconStyle}"
									/>

							<Path
									Height="12"
									Margin="5,0,0,0"
									Data="{StaticResource Icon.Arrow.Tree}"
									Style="{StaticResource IconStyle}"
									/>

							<Path
									Height="10"
									Margin="5,0,0,0"
									Data="{StaticResource Icon.Arrow.Tree2}"
									Style="{StaticResource IconStyle}"
									/>


						</StackPanel>

						<StackPanel
								Margin="0,10,0,0"
								Orientation="Horizontal"
								>
							<Path
									Data="{StaticResource Icon.Check.Mark}"
									Style="{StaticResource IconStyle}"
									/>

							<Path
									Height="4"
									Data="{StaticResource Icon.Svg.Dash}"
									Style="{StaticResource IconStyle}"
									/>

							<Path
									Height="22"
									Stretch="Uniform"
									Data="{StaticResource Icon.Svg.History}"
									Style="{StaticResource IconStyle}"
									/>

							<Path
									Height="20"
									Data="{StaticResource Icon.Svg.Plus}"
									Style="{StaticResource IconStyle}"
									/>

							<Path
									Height="20"
									Stretch="Uniform"
									Data="{StaticResource Icon.Rect}"
									Style="{StaticResource IconStyle}"
									/>

							<Path
									Height="20"
									Data="{StaticResource Icon.Svg.Star}"
									Style="{StaticResource IconStyle}"
									/>

							<Path
									Height="20"
									Data="{StaticResource Icon.Triangle}"
									Style="{StaticResource IconStyle}"
									/>

							<Path
									Height="20"
									Data="{StaticResource Icon.Triangle.Oblique}"
									Style="{StaticResource IconStyle}"
									/>

							<Path
									Data="{StaticResource IconCancel}"
									Style="{StaticResource IconStyle}"
									/>

							<Path
									Data="{StaticResource IconCircle1}"
									Style="{StaticResource IconStyle}"
									/>


							<Path
									Data="{StaticResource IconHeavyX}"
									Style="{StaticResource IconStyle}"
									/>


							<Path
									Data="{StaticResource IconInfo}"
									Style="{StaticResource IconStyle}"
									/>

							<Path
									Data="{StaticResource IconHelp}"
									Style="{StaticResource IconStyle}"
									/>

							<Path
									Data="{StaticResource IconGeomHelp2}"
									Style="{StaticResource IconStyle}"
									/>

							<Path
									Data="{StaticResource IconGeomHelp3}"
									Style="{StaticResource IconStyle}"
									/>

							<Path
									Data="{StaticResource IconGeomHelp4}"
									Style="{StaticResource IconStyle}"
									/>


						</StackPanel>
						<StackPanel
								Margin="0,10,0,0"
								Orientation="Horizontal"
								>

							<Button Style="{StaticResource BtnIconStyle}">

								<Button.Content>
									<Viewbox Child="{StaticResource File-Open-00}" />
								</Button.Content>
							</Button>

							<Button Style="{StaticResource BtnIconStyle}">
								<Button.Content>
									<Viewbox Child="{StaticResource Folder-Pair-00}" />
								</Button.Content>
							</Button>

							<Button Style="{StaticResource BtnIconStyle}">
								<Button.Content>
									<Viewbox Child="{StaticResource Folder-Project-00}" />
								</Button.Content>
							</Button>

						</StackPanel>
					</StackPanel>

				</StackPanel>
			</StackPanel>



		</StackPanel>

		<DockPanel
				Grid.Column="2"
				Grid.Row="0"
				>
			<StackPanel
					DockPanel.Dock="Top"
					Orientation="Vertical"
					>
				<ComboBox
						Width="250"
						HorizontalAlignment="Left"
						VerticalAlignment="Top"
						ItemsSource="{Binding DictItems}"
						DisplayMemberPath="Value.Name"
						SelectedValue="{Binding Di}"
						SelectedValuePath="Value"
						BorderThickness="2"
						BorderBrush="Blue"
						FocusVisualStyle="{x:Null}"
						FontSize="12"
						HorizontalContentAlignment="Stretch"
						Margin="5,0,0,0"
						MaxDropDownHeight="150"
						cs:CsComboBoxAp.ComboBoxBdrRadius="6.0"
						cs:CsComboBoxAp.DropDownBrush="{StaticResource ItemsControl.ListItem.Background.Normal}"
						cs:CsComboBoxAp.DropDownMaxWidth="240.0"
						cs:CsScrollBarAp.ScrollBarWidth="15"
						Style="{StaticResource CsComboBoxStyle}"
						/>

				<TextBlock
						Width="250"
						Text="{Binding Di.Name, FallbackValue='unassigned', TargetNullValue='null'}"
						HorizontalAlignment="Left"
						Foreground="White"
						Margin="0,0,0,00"
						/>

				<TextBlock
						Width="250"
						Text="{Binding SetgSample.ItemSampleList[0].Namex}"
						HorizontalAlignment="Left"
						Foreground="White"
						Margin="0,10,0,20"
						/>
			</StackPanel>

			<TreeView x:Name="Tv1"
					DockPanel.Dock="Top"
					Height="100"
					d:ItemsSource="{d:SampleData ItemCount=3}"
					ItemsSource="{Binding SetgSample.ItemSampleList}"
					Margin="0"
					Padding="0"
					HorizontalContentAlignment="Stretch"
					>

				<TreeView.ItemTemplate>
					<DataTemplate>
						<TreeViewItem
								IsExpanded="True"
								Padding="0"
								Margin="0"
								HorizontalContentAlignment="Stretch"
								ItemsSource="{Binding DictData}"
								>

							<TreeViewItem.HeaderTemplate>
								<DataTemplate x:Name="DtHeader"
										DataType="{x:Type dataStructures:ItemSample}"
										>
									<StackPanel
											HorizontalAlignment="Stretch"
											Margin="0"
											Orientation="Horizontal"
											DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}, Path=DataContext}"
											>

										<TextBlock Text="{Binding Namex, FallbackValue='hname'}" />

										<ComboBox
												Width="100"
												ItemsSource="{Binding ElementName=WinMain, Path=DataContext.DictItems}"
												SelectedIndex="0"
												DisplayMemberPath="Value.Name"
												SelectedValue="{Binding DictData}"
												SelectedValuePath="Value"
												/>

										<TextBlock
												Margin="10,0,0,0"
												Text="{Binding DictData.Name, FallbackValue='dname'}"
												/>

									</StackPanel>
								</DataTemplate>
							</TreeViewItem.HeaderTemplate>

							<TreeViewItem.ItemTemplate>
								<HierarchicalDataTemplate DataType="{x:Type dataStructures:ItemSample}">
									<StackPanel
											Margin="0"
											Orientation="Horizontal"
											>

										<TextBlock Text="{Binding Namex}" />
									</StackPanel>
								</HierarchicalDataTemplate>
							</TreeViewItem.ItemTemplate>
						</TreeViewItem>
					</DataTemplate>
				</TreeView.ItemTemplate>

			</TreeView>


			<Grid
					DockPanel.Dock="Top"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Top"
					Background="BurlyWood"
					>
				<Grid.ColumnDefinitions>
					<ColumnDefinition
							Width="*"
							MinWidth="200"
							/>
					<ColumnDefinition Width="120" />
					<ColumnDefinition Width="10" />
					<ColumnDefinition Width="121" />
				</Grid.ColumnDefinitions>

				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>

				<TextBlock
						Grid.Column="0"
						Grid.Row="0"
						Text="Name"
						Padding="32,0,0,0"
						Background="Transparent"
						/>

				<TextBlock
						Grid.Column="1"
						Grid.Row="0"
						Background="PaleVioletRed"
						Text="Choose Style"
						TextAlignment="Center"
						/>


				<TextBlock
						Grid.Column="3"
						Grid.Row="0"
						Background="PaleVioletRed"
						Text="Selected Style"
						TextAlignment="Center"
						/>



				<TreeView x:Name="Tv2"
						Grid.Column="0"
						Grid.Row="1"
						Grid.ColumnSpan="4"
						Height="200"
						d:ItemsSource="{d:SampleData ItemCount=3}"
						ItemsSource="{Binding SetgTree.TreeItems}"
						Margin="0"
						Padding="0"
						HorizontalContentAlignment="Stretch"
						VerticalAlignment="Top"
						>

					<TreeView.ItemTemplate>
						<DataTemplate>

							<TreeViewItem
									ItemsSource="{Binding TreeItems}"
									IsExpanded="True"
									>

								<TreeViewItem.Header>
									<TextBlock Text="" />
								</TreeViewItem.Header>
								<!--
									note
									don't use a resource for the item template - causes VS to lock-up
								-->

								<!--  ItemTemplate="{StaticResource TreeViewItemItemTemplate1}"  -->

								<TreeViewItem.HeaderTemplate>
									<DataTemplate DataType="{x:Type dataStructures:SettingSampleTree}">


										<Grid
												DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}, Path=DataContext}"
												HorizontalAlignment="Stretch"
												>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="20" />
												<ColumnDefinition Width="80" />
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="120" />
												<ColumnDefinition Width="10" />
												<ColumnDefinition Width="120" />
											</Grid.ColumnDefinitions>

											<Grid.RowDefinitions>
												<RowDefinition Height="18" />
												<RowDefinition Height="4" />

											</Grid.RowDefinitions>

											<TextBlock
													Grid.Column="0"
													Grid.Row="0"
													Text="H"
													/>
											<TextBlock
													Grid.Column="1"
													Grid.Row="0"
													Margin="0,0,0,0"
													Text="{Binding Sname, FallbackValue=Sname2}"
													/>

											<ComboBox
													DockPanel.Dock="left"
													Grid.Column="3"
													Grid.Row="0"
													HorizontalAlignment="Stretch"
													DisplayMemberPath="Value.Name"
													ItemsSource="{Binding DataContext.DictItems, ElementName=WinMain, Mode=OneWay}"
													SelectedValue="{Binding SampleItem.DictData, Mode=TwoWay}"
													SelectedValuePath="Value"
													/>
											<TextBlock
													DockPanel.Dock="right"
													Grid.Column="5"
													Grid.Row="0"
													HorizontalAlignment="Stretch"
													Background="PaleGreen"
													Text="{Binding SampleItem.DictData.Name, FallbackValue=name}"
													/>

										</Grid>

										<!--
											note
											the following line causes display problems wiht the app, moves the list drop down to the corner of the screen
											and causes snoop to work badly / slow
										-->
										<!--  Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}, Path=ActualWidth}"  -->


									</DataTemplate>
								</TreeViewItem.HeaderTemplate>

								<TreeViewItem.ItemTemplate>
									<HierarchicalDataTemplate
											DataType="{x:Type dataStructures:SettingSampleTree}"
											ItemsSource="{Binding TreeItems}"
											>

										<Grid HorizontalAlignment="Stretch">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="20" />
												<ColumnDefinition Width="80" />
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="120" />
												<ColumnDefinition Width="10" />
												<ColumnDefinition Width="120" />
											</Grid.ColumnDefinitions>

											<Grid.RowDefinitions>
												<RowDefinition Height="18" />
												<RowDefinition Height="4" />

											</Grid.RowDefinitions>

											<TextBlock
													Grid.Column="0"
													Grid.Row="0"
													Text="I"
													/>
											<TextBlock
													Grid.Column="1"
													Grid.Row="0"
													Margin="0,0,0,0"
													Text="{Binding Sname, FallbackValue=Sname2}"
													/>

											<ComboBox
													DockPanel.Dock="left"
													Grid.Column="3"
													Grid.Row="0"
													HorizontalAlignment="Stretch"
													DisplayMemberPath="Value.Name"
													ItemsSource="{Binding DataContext.DictItems, ElementName=WinMain, Mode=OneWay}"
													SelectedValue="{Binding SampleItem.DictData, Mode=TwoWay}"
													SelectedValuePath="Value"
													/>
											<TextBlock
													DockPanel.Dock="right"
													Grid.Column="5"
													Grid.Row="0"
													HorizontalAlignment="Stretch"
													Background="PaleGreen"
													Text="{Binding SampleItem.DictData.Name, FallbackValue=name}"
													/>

										</Grid>

									</HierarchicalDataTemplate>
								</TreeViewItem.ItemTemplate>

							</TreeViewItem>

						</DataTemplate>

					</TreeView.ItemTemplate>

				</TreeView>


			</Grid>


		</DockPanel>


		<StackPanel
				Grid.Column="0"
				Grid.Row="1"
				Grid.ColumnSpan="3"
				Margin="5"
				HorizontalAlignment="Right"
				VerticalAlignment="Bottom"
				Orientation="Horizontal"
				>

			<Button
					Content="Sho Disc Samp"
					Height="{StaticResource BtnHeight}"
					Width="{StaticResource BtnWidth}"
					Margin="0,0,10,0"
					Style="{StaticResource Btn.Std}"
					Click="BtnShoDict1_OnClick"
					/>

			<Button
					Content="debug"
					Height="{StaticResource BtnHeight}"
					Width="{StaticResource BtnWidth}"
					Margin="0,0,10,0"
					Style="{StaticResource Btn.Std}"
					Click="BtnDebug_OnClick"
					/>

			<Button x:Name="BtnExit"
					Content="Exit"
					Height="{StaticResource BtnHeight}"
					Width="{StaticResource BtnWidth}"
					Margin="0,0,10,0"
					Style="{StaticResource Btn.Std}"
					Click="BtnExit_OnClick"
					/>

		</StackPanel>





	</Grid>
</Window>
