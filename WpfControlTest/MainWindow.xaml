<Window x:Name="mainwin"
		x:Class="WpfControlTest.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:local="clr-namespace:WpfControlTest"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		Title="MainWindow"
		Height="450"
		Width="800"
		mc:Ignorable="d"
		Background="#444444"
		DataContext="{Binding ElementName=mainwin}"
		>
	<Window.Resources>

		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181" />
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF" />
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7" />
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB" />
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626" />
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959" />
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7" />
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB" />
		<PathGeometry x:Key="TreeArrow"
				Figures="M0,0 L0,6 L6,0 z"
				/>

		<!--#region > tv templates 1-->

		<Style x:Key="TreeViewItemFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle />
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="ExpandCollapseToggleStyle"
				TargetType="{x:Type ToggleButton}"
				>
			<Setter Property="Focusable" Value="False" />
			<Setter Property="Width" Value="16" />
			<Setter Property="Height" Value="16" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border
								Height="16"
								Width="16"
								Background="Transparent"
								Padding="5,5,5,5"
								>
							<Path x:Name="ExpandPath"
									Data="{StaticResource TreeArrow}"
									Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}"
									Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}"
									>
								<Path.RenderTransform>
									<RotateTransform Angle="135" CenterY="3" CenterX="3" />
								</Path.RenderTransform>
							</Path>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="True">
								<Setter Property="RenderTransform" TargetName="ExpandPath">
									<Setter.Value>
										<RotateTransform Angle="180" CenterY="3" CenterX="3" />
									</Setter.Value>
								</Setter>
								<Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}" />
								<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}" />
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" />
								<Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" />
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True" />
									<Condition Property="IsChecked" Value="True" />
								</MultiTrigger.Conditions>
								<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" />
								<Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}" />
							</MultiTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- -->
		<!-- <Style x:Key="ExpandCollapseToggleStyle1" -->
		<!-- 		TargetType="{x:Type ToggleButton}" -->
		<!-- 		> -->
		<!-- 	<Setter Property="Focusable" Value="False" /> -->
		<!-- 	<Setter Property="Width" Value="16" /> -->
		<!-- 	<Setter Property="Height" Value="16" /> -->
		<!-- 	<Setter Property="Template"> -->
		<!-- 		<Setter.Value> -->
		<!-- 			<ControlTemplate TargetType="{x:Type ToggleButton}"> -->
		<!-- 				<Border -->
		<!-- 						Height="16" -->
		<!-- 						Width="16" -->
		<!-- 						Background="Transparent" -->
		<!-- 						Padding="5,5,5,5" -->
		<!-- 						> -->
		<!-- 					<Path x:Name="ExpandPath" -->
		<!-- 							Data="{StaticResource TreeArrow}" -->
		<!-- 							Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}" -->
		<!-- 							Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}" -->
		<!-- 							> -->
		<!-- 						<Path.RenderTransform> -->
		<!-- 							<RotateTransform Angle="135" CenterY="3" CenterX="3" /> -->
		<!-- 						</Path.RenderTransform> -->
		<!-- 					</Path> -->
		<!-- 				</Border> -->
		<!-- 				<ControlTemplate.Triggers> -->
		<!-- 					<Trigger Property="IsChecked" Value="True"> -->
		<!-- 						<Setter Property="RenderTransform" TargetName="ExpandPath"> -->
		<!-- 							<Setter.Value> -->
		<!-- 								<RotateTransform Angle="180" CenterY="3" CenterX="3" /> -->
		<!-- 							</Setter.Value> -->
		<!-- 						</Setter> -->
		<!-- 						<Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}" /> -->
		<!-- 						<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}" /> -->
		<!-- 					</Trigger> -->
		<!-- 					<Trigger Property="IsMouseOver" Value="True"> -->
		<!-- 						<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" /> -->
		<!-- 						<Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" /> -->
		<!-- 					</Trigger> -->
		<!-- 					<MultiTrigger> -->
		<!-- 						<MultiTrigger.Conditions> -->
		<!-- 							<Condition Property="IsMouseOver" Value="True" /> -->
		<!-- 							<Condition Property="IsChecked" Value="True" /> -->
		<!-- 						</MultiTrigger.Conditions> -->
		<!-- 						<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" /> -->
		<!-- 						<Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}" /> -->
		<!-- 					</MultiTrigger> -->
		<!-- 				</ControlTemplate.Triggers> -->
		<!-- 			</ControlTemplate> -->
		<!-- 		</Setter.Value> -->
		<!-- 	</Setter> -->
		<!-- </Style> -->
		<!-- -->
		<!-- <Style x:Key="TreeViewItemStyle1" -->
		<!-- 		TargetType="{x:Type TreeViewItem}" -->
		<!-- 		> -->
		<!-- 	<Setter Property="Width" Value="Auto" /> -->
		<!-- 	<Setter Property="Background" Value="Transparent" /> -->
		<!-- 	<Setter Property="HorizontalContentAlignment" Value="Stretch" /> -->
		<!-- 	<Setter Property="HorizontalAlignment" Value="Stretch" /> -->
		<!-- 	~1~ <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" /> @1@ -->
		<!-- 	<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" /> -->
		<!-- 	<Setter Property="Padding" Value="1,0,0,0" /> -->
		<!-- 	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" /> -->
		<!-- 	<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" /> -->
		<!-- 	<Setter Property="Template"> -->
		<!-- 		<Setter.Value> -->
		<!-- 			<ControlTemplate x:Name="CTZ" -->
		<!-- 					TargetType="{x:Type TreeViewItem}" -->
		<!-- 					> -->
		<!-- -->
		<!-- 				<Grid x:Name="Gd" -->
		<!-- 						HorizontalAlignment="Stretch" -->
		<!-- 						> -->
		<!-- 					<Grid.ColumnDefinitions> -->
		<!-- 						<ColumnDefinition -->
		<!-- 								Width="Auto" -->
		<!-- 								MinWidth="19" -->
		<!-- 								/> -->
		<!-- 						<ColumnDefinition x:Name="C1" -->
		<!-- 								Width="*" -->
		<!-- 								/> -->
		<!-- 						<ColumnDefinition x:Name="C2" -->
		<!-- 								Width="*" -->
		<!-- 								/> -->
		<!-- 					</Grid.ColumnDefinitions> -->
		<!-- 					<Grid.RowDefinitions> -->
		<!-- 						<RowDefinition Height="Auto" /> -->
		<!-- 						<RowDefinition /> -->
		<!-- 					</Grid.RowDefinitions> -->
		<!-- 					<ToggleButton x:Name="Expander" -->
		<!-- 							ClickMode="Press" -->
		<!-- 							IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" -->
		<!-- 							Style="{StaticResource ExpandCollapseToggleStyle}" -->
		<!-- 							/> -->
		<!-- 					<Border x:Name="Bd" -->
		<!-- 							Grid.Column="1" -->
		<!-- 							Grid.Row="0" -->
		<!-- 							Grid.ColumnSpan="2" -->
		<!-- 							BorderBrush="{TemplateBinding BorderBrush}" -->
		<!-- 							BorderThickness="{TemplateBinding BorderThickness}" -->
		<!-- 							Padding="{TemplateBinding Padding}" -->
		<!-- 							SnapsToDevicePixels="true" -->
		<!-- 							HorizontalAlignment="Stretch" -->
		<!-- 							Background="{TemplateBinding Background}" -->
		<!-- 							> -->
		<!-- 						<ContentPresenter x:Name="PART_Header" -->
		<!-- 								ContentSource="Header" -->
		<!-- 								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" -->
		<!-- 								HorizontalAlignment="Stretch" -->
		<!-- 								DataContext="{Binding Path=ItemsSource, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}" -->
		<!-- 								> -->
		<!-- 							<ContentPresenter.ContentTemplate> -->
		<!-- 								<DataTemplate x:Name="DT1"> -->
		<!-- 									<TreeViewItem x:Name="Tvi1" -->
		<!-- 											HorizontalAlignment="Stretch" -->
		<!-- 											HorizontalContentAlignment="Stretch" -->
		<!-- 											ItemsSource="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}, Path=DataContext.IC}" -->
		<!-- 											> -->
		<!-- 										~1~  header  @1@ -->
		<!-- 										<TreeViewItem.HeaderTemplate> -->
		<!-- 											<DataTemplate x:Name="Hdt2"> -->
		<!-- -->
		<!-- 												<DockPanel x:Name="DP1" -->
		<!-- 														HorizontalAlignment="Stretch" -->
		<!-- 														Background="Aquamarine" -->
		<!-- 														DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" -->
		<!-- 														> -->
		<!-- 													<TextBlock -->
		<!-- 															DockPanel.Dock="Left" -->
		<!-- 															Text="temp A" -->
		<!-- 															Background="Cornsilk" -->
		<!-- 															HorizontalAlignment="Stretch" -->
		<!-- 															/> -->
		<!-- 													<TextBlock -->
		<!-- 															DockPanel.Dock="Right" -->
		<!-- 															Background="LightGray" -->
		<!-- 															HorizontalAlignment="Stretch" -->
		<!-- 															Text="{Binding info1, Mode=OneWay, FallbackValue=''}" -->
		<!-- 															/> -->
		<!-- 												</DockPanel> -->
		<!-- 											</DataTemplate> -->
		<!-- 										</TreeViewItem.HeaderTemplate> -->
		<!-- -->
		<!-- -->
		<!-- 										~1~  item  @1@ -->
		<!-- 										<TreeViewItem.ItemTemplate> -->
		<!-- 											<HierarchicalDataTemplate x:Name="Hdt1"> -->
		<!-- 												<StackPanel x:Name="DP2" -->
		<!-- 														Orientation="Horizontal" -->
		<!-- 														HorizontalAlignment="Stretch" -->
		<!-- 														Background="Lavender" -->
		<!-- 														> -->
		<!-- 													<TextBlock -->
		<!-- 															DockPanel.Dock="Top" -->
		<!-- 															HorizontalAlignment="Stretch" -->
		<!-- 															Text="temp B" -->
		<!-- 															Background="Bisque" -->
		<!-- 															/> -->
		<!-- 													<TextBlock -->
		<!-- 															DockPanel.Dock="Top" -->
		<!-- 															Margin="10,0,0,0" -->
		<!-- 															Text="{Binding info1, Mode=OneWay}" -->
		<!-- 															HorizontalAlignment="Stretch" -->
		<!-- 															Background="BurlyWood" -->
		<!-- 															/> -->
		<!-- 												</StackPanel> -->
		<!-- 											</HierarchicalDataTemplate> -->
		<!-- 										</TreeViewItem.ItemTemplate> -->
		<!-- -->
		<!-- 									</TreeViewItem> -->
		<!-- 								</DataTemplate> -->
		<!-- -->
		<!-- -->
		<!-- 							</ContentPresenter.ContentTemplate> -->
		<!-- 						</ContentPresenter> -->
		<!-- 					</Border> -->
		<!-- -->
		<!-- 					<ItemsPresenter x:Name="ItemsHost" -->
		<!-- 							Grid.Column="1" -->
		<!-- 							Grid.Row="1" -->
		<!-- 							/> -->
		<!-- 				</Grid> -->
		<!-- -->
		<!-- -->
		<!-- 				<ControlTemplate.Triggers> -->
		<!-- 					<Trigger Property="IsExpanded" Value="false"> -->
		<!-- 						<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed" /> -->
		<!-- 					</Trigger> -->
		<!-- 					<Trigger Property="HasItems" Value="false"> -->
		<!-- 						<Setter Property="Visibility" TargetName="Expander" Value="Hidden" /> -->
		<!-- 					</Trigger> -->
		<!-- 					<Trigger Property="IsSelected" Value="true"> -->
		<!-- 						<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" /> -->
		<!-- 						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" /> -->
		<!-- 					</Trigger> -->
		<!-- 					<MultiTrigger> -->
		<!-- 						<MultiTrigger.Conditions> -->
		<!-- 							<Condition Property="IsSelected" Value="true" /> -->
		<!-- 							<Condition Property="IsSelectionActive" Value="false" /> -->
		<!-- 						</MultiTrigger.Conditions> -->
		<!-- 						<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" /> -->
		<!-- 						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" /> -->
		<!-- 					</MultiTrigger> -->
		<!-- 					<Trigger Property="IsEnabled" Value="false"> -->
		<!-- 						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" /> -->
		<!-- 					</Trigger> -->
		<!-- 				</ControlTemplate.Triggers> -->
		<!-- 			</ControlTemplate> -->
		<!-- 		</Setter.Value> -->
		<!-- 	</Setter> -->
		<!-- 	<Style.Triggers> -->
		<!-- 		<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true"> -->
		<!-- 			<Setter Property="ItemsPanel"> -->
		<!-- 				<Setter.Value> -->
		<!-- 					<ItemsPanelTemplate> -->
		<!-- 						<VirtualizingStackPanel /> -->
		<!-- 					</ItemsPanelTemplate> -->
		<!-- 				</Setter.Value> -->
		<!-- 			</Setter> -->
		<!-- 		</Trigger> -->
		<!-- 	</Style.Triggers> -->
		<!-- </Style> -->


		<!--#endregion-->


		<!--#region > tv templates 2-->
		<!-- -->
		<!-- <ControlTemplate x:Key="Tv1ScrollViewerControlTemplate1" -->
		<!-- 		TargetType="{x:Type ScrollViewer}" -->
		<!-- 		> -->
		<!-- 	<Grid x:Name="Grid" -->
		<!-- 			Background="{TemplateBinding Background}" -->
		<!-- 			> -->
		<!-- 		<Grid.ColumnDefinitions> -->
		<!-- 			<ColumnDefinition Width="Auto" /> -->
		<!-- 			<ColumnDefinition Width="*" /> -->
		<!-- 			<ColumnDefinition Width="Auto" /> -->
		<!-- 		</Grid.ColumnDefinitions> -->
		<!-- 		<Grid.RowDefinitions> -->
		<!-- 			<RowDefinition Height="Auto" /> -->
		<!-- 			<RowDefinition Height="*" /> -->
		<!-- 			<RowDefinition Height="Auto" /> -->
		<!-- 		</Grid.RowDefinitions> -->
		<!-- 		<Rectangle x:Name="Corner" -->
		<!-- 				Grid.Column="2" -->
		<!-- 				Grid.Row="2" -->
		<!-- 				Fill="black" -->
		<!-- 				/> -->
		<!-- 		<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" -->
		<!-- 				Content="{TemplateBinding Content}" -->
		<!-- 				Grid.Column="0" -->
		<!-- 				Grid.Row="1" -->
		<!-- 				Grid.ColumnSpan="2" -->
		<!-- 				Margin="{TemplateBinding Padding}" -->
		<!-- 				CanContentScroll="{TemplateBinding CanContentScroll}" -->
		<!-- 				CanHorizontallyScroll="False" -->
		<!-- 				CanVerticallyScroll="False" -->
		<!-- 				ContentTemplate="{TemplateBinding ContentTemplate}" -->
		<!-- 				/> -->
		<!-- -->
		<!-- 		<ScrollBar x:Name="PART_VerticalScrollBar" -->
		<!-- 				Grid.Column="2" -->
		<!-- 				Grid.Row="1" -->
		<!-- 				Width="8" -->
		<!-- 				Margin="0,0,0,0" -->
		<!-- 				Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" -->
		<!-- 				Background="Black" -->
		<!-- 				Cursor="Arrow" -->
		<!-- 				Maximum="{TemplateBinding ScrollableHeight}" -->
		<!-- 				Minimum="0" -->
		<!-- 				ViewportSize="{TemplateBinding ViewportHeight}" -->
		<!-- 				Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" -->
		<!-- 				/> -->
		<!-- -->
		<!-- 		<ScrollBar x:Name="PART_HorizontalScrollBar" -->
		<!-- 				Grid.Column="1" -->
		<!-- 				Grid.Row="2" -->
		<!-- 				Height="8" -->
		<!-- 				Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" -->
		<!-- 				Background="Black" -->
		<!-- 				AutomationProperties.AutomationId="HorizontalScrollBar" -->
		<!-- 				ClipToBounds="True" -->
		<!-- 				Cursor="Arrow" -->
		<!-- 				Maximum="{TemplateBinding ScrollableWidth}" -->
		<!-- 				Minimum="0" -->
		<!-- 				Orientation="Horizontal" -->
		<!-- 				ViewportSize="{TemplateBinding ViewportWidth}" -->
		<!-- 				Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" -->
		<!-- 				/> -->
		<!-- -->
		<!-- 	</Grid> -->
		<!-- </ControlTemplate> -->
		<!-- -->
		<!-- -->
		<!-- -->
		<!-- <Style x:Key="Tv1Style1" -->
		<!-- 		TargetType="{x:Type TreeView}" -->
		<!-- 		> -->
		<!-- 	<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" /> -->
		<!-- 	<Setter Property="BorderBrush" Value="Red" /> -->
		<!-- 	<Setter Property="BorderThickness" Value="1" /> -->
		<!-- 	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" /> -->
		<!-- 	<Setter Property="Padding" Value="1" /> -->
		<!-- -->
		<!-- 	<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" /> -->
		<!-- 	<Setter Property="ScrollViewer.PanningMode" Value="Both" /> -->
		<!-- 	<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" /> -->
		<!-- 	<Setter Property="Stylus.IsFlicksEnabled" Value="False" /> -->
		<!-- 	<Setter Property="Template"> -->
		<!-- 		<Setter.Value> -->
		<!-- 			<ControlTemplate TargetType="{x:Type TreeView}"> -->
		<!-- 				<Border x:Name="Bd" -->
		<!-- 						BorderThickness="{TemplateBinding BorderThickness}" -->
		<!-- 						BorderBrush="{TemplateBinding BorderBrush}" -->
		<!-- 						SnapsToDevicePixels="true" -->
		<!-- 						> -->
		<!-- 					<ScrollViewer x:Name="_tv_scrollviewer_" -->
		<!-- 							Padding="{TemplateBinding Padding}" -->
		<!-- 							Background="{TemplateBinding Background}" -->
		<!-- 							CanContentScroll="false" -->
		<!-- 							Focusable="false" -->
		<!-- 							HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" -->
		<!-- 							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" -->
		<!-- 							VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" -->
		<!-- 							Template="{DynamicResource Tv1ScrollViewerControlTemplate1}" -->
		<!-- 							> -->
		<!-- 						<ItemsPresenter /> -->
		<!-- 					</ScrollViewer> -->
		<!-- 				</Border> -->
		<!-- 				<ControlTemplate.Triggers> -->
		<!-- 					<Trigger Property="IsEnabled" Value="false"> -->
		<!-- 						<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" /> -->
		<!-- 					</Trigger> -->
		<!-- 					<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true"> -->
		<!-- 						<Setter TargetName="_tv_scrollviewer_" Property="CanContentScroll" Value="true" /> -->
		<!-- 					</Trigger> -->
		<!-- 				</ControlTemplate.Triggers> -->
		<!-- 			</ControlTemplate> -->
		<!-- 		</Setter.Value> -->
		<!-- 	</Setter> -->
		<!-- 	<Setter Property="VerticalContentAlignment" Value="Center" /> -->
		<!-- 	<Style.Triggers> -->
		<!-- 		<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true"> -->
		<!-- 			<Setter Property="ItemsPanel"> -->
		<!-- 				<Setter.Value> -->
		<!-- 					<ItemsPanelTemplate> -->
		<!-- 						<VirtualizingStackPanel /> -->
		<!-- 					</ItemsPanelTemplate> -->
		<!-- 				</Setter.Value> -->
		<!-- 			</Setter> -->
		<!-- 		</Trigger> -->
		<!-- 	</Style.Triggers> -->
		<!-- </Style> -->
		<!-- -->
		<!-- -->
		<!-- <Style x:Key="Tv1ExpandCollapseToggleStyle" -->
		<!-- 		TargetType="{x:Type ToggleButton}" -->
		<!-- 		> -->
		<!-- 	<Setter Property="Focusable" Value="False" /> -->
		<!-- 	<Setter Property="Height" Value="16" /> -->
		<!-- 	<Setter Property="Template"> -->
		<!-- 		<Setter.Value> -->
		<!-- 			<ControlTemplate TargetType="{x:Type ToggleButton}"> -->
		<!-- 				<Border -->
		<!-- 						Height="24" -->
		<!-- 						Width="24" -->
		<!-- 						Padding="5,5,5,5" -->
		<!-- 						Background="Transparent" -->
		<!-- 						> -->
		<!-- 					<Path x:Name="ExpandPath" -->
		<!-- 							Data="{StaticResource TreeArrow}" -->
		<!-- 							Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}" -->
		<!-- 							Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}" -->
		<!-- 							StrokeThickness="1" -->
		<!-- 							> -->
		<!-- 						<Path.RenderTransform> -->
		<!-- 							<RotateTransform Angle="135" CenterX="3" CenterY="3" /> -->
		<!-- 						</Path.RenderTransform> -->
		<!-- 					</Path> -->
		<!-- 				</Border> -->
		<!-- 				<ControlTemplate.Triggers> -->
		<!-- 					<Trigger Property="IsChecked" Value="true"> -->
		<!-- 						<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}" /> -->
		<!-- 						<Setter TargetName="ExpandPath" Property="RenderTransform"> -->
		<!-- 							<Setter.Value> -->
		<!-- 								<RotateTransform Angle="180" CenterX="3" CenterY="3" /> -->
		<!-- 							</Setter.Value> -->
		<!-- 						</Setter> -->
		<!-- 						<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}" /> -->
		<!-- 					</Trigger> -->
		<!-- -->
		<!-- 					<Trigger Property="IsMouseOver" Value="true"> -->
		<!-- 						<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" /> -->
		<!-- 						<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" /> -->
		<!-- 					</Trigger> -->
		<!-- -->
		<!-- 					<MultiTrigger> -->
		<!-- 						<MultiTrigger.Conditions> -->
		<!-- 							<Condition Property="IsMouseOver" Value="true" /> -->
		<!-- 							<Condition Property="IsChecked" Value="true" /> -->
		<!-- 						</MultiTrigger.Conditions> -->
		<!-- 						<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}" /> -->
		<!-- 						<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" /> -->
		<!-- 					</MultiTrigger> -->
		<!-- 				</ControlTemplate.Triggers> -->
		<!-- 			</ControlTemplate> -->
		<!-- 		</Setter.Value> -->
		<!-- 	</Setter> -->
		<!-- 	<Setter Property="Width" Value="16" /> -->
		<!-- </Style> -->
		<!-- -->
		<!-- -->
		<!-- -->
		<!-- <Style x:Key="Tv1ItemContainerStyle1" x:Name="TvItemContainer" -->
		<!-- 		TargetType="{x:Type TreeViewItem}" -->
		<!-- 		> -->
		<!-- 	<Setter Property="Width" Value="Auto" /> -->
		<!-- -->
		<!-- 	<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" /> -->
		<!-- 	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" /> -->
		<!-- -->
		<!-- 	<Setter Property="Padding" Value="1,0,0,0" /> -->
		<!-- 	<Setter Property="HorizontalContentAlignment" Value="Stretch" /> -->
		<!-- -->
		<!-- 	<Setter Property="Template"> -->
		<!-- 		<Setter.Value> -->
		<!-- 			<ControlTemplate x:Name="Tv1ItemContainer" -->
		<!-- 					TargetType="{x:Type TreeViewItem}" -->
		<!-- 					> -->
		<!-- -->
		<!-- 				<Grid Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" -->
		<!-- 						Margin="0,2,0,0" -->
		<!-- 						> -->
		<!-- 					~1~  UIElement.MouseLeftButtonUp="UIElement_OnMouseLeftButtonUp"  @1@ -->
		<!-- 					<Grid.ColumnDefinitions> -->
		<!-- 						<ColumnDefinition -->
		<!-- 								Width="Auto" -->
		<!-- 								MinWidth="19" -->
		<!-- 								/> -->
		<!-- 						<ColumnDefinition Width="*" /> -->
		<!-- 					</Grid.ColumnDefinitions> -->
		<!-- 					<Grid.RowDefinitions> -->
		<!-- 						<RowDefinition Height="Auto" /> -->
		<!-- 						<RowDefinition /> -->
		<!-- 					</Grid.RowDefinitions> -->
		<!-- -->
		<!-- 					<ToggleButton x:Name="Expander" -->
		<!-- 							VerticalAlignment="Top" -->
		<!-- 							IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" -->
		<!-- 							IsEnabled="true" -->
		<!-- 							ClickMode="Press" -->
		<!-- 							Style="{StaticResource Tv1ExpandCollapseToggleStyle}" -->
		<!-- 							/> -->
		<!-- -->
		<!-- -->
		<!-- 					<Border x:Name="Bdr" -->
		<!-- 							Grid.Column="1" -->
		<!-- 							Grid.Row="0" -->
		<!-- 							Width="Auto" -->
		<!-- 							Margin="0,0.5,4.5,0" -->
		<!-- 							BorderThickness="12,1.5,.5,6" -->
		<!-- 							CornerRadius="6" -->
		<!-- 							SnapsToDevicePixels="True" -->
		<!-- 							> -->
		<!-- 						<Border.Style> -->
		<!-- 							<Style TargetType="{x:Type Border}"> -->
		<!-- 								<Setter Property="Background" Value="DimGray" /> -->
		<!-- -->
		<!-- 							</Style> -->
		<!-- 						</Border.Style> -->
		<!-- 						<Border.BorderBrush> -->
		<!-- 							<LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,0"> -->
		<!-- 								<GradientStop Offset="0.03" Color="DimGray" /> -->
		<!-- 								<GradientStop Offset="0.10" Color="LightGray" /> -->
		<!-- 							</LinearGradientBrush> -->
		<!-- 						</Border.BorderBrush> -->
		<!-- -->
		<!-- -->
		<!-- -->
		<!-- 						<Border x:Name="BD" -->
		<!-- 								Margin="-3.5,-.5,.5,-1" -->
		<!-- 								BorderThickness="4,0.5,2,0.5" -->
		<!-- 								BorderBrush="Red" -->
		<!-- 								CornerRadius="5" -->
		<!-- 								> -->
		<!-- 							<Border.Style> -->
		<!-- 								<Style TargetType="{x:Type Border}"> -->
		<!-- 									<Setter Property="Background" Value="MediumBlue" /> -->
		<!-- 								</Style> -->
		<!-- 							</Border.Style> -->
		<!-- -->
		<!-- 							<VirtualizingStackPanel -->
		<!-- 									Grid.Column="1" -->
		<!-- 									Grid.Row="0" -->
		<!-- 									> -->
		<!-- -->
		<!-- -->
		<!-- 								<Border x:Name="Bd" -->
		<!-- 										Padding="{TemplateBinding Padding}" -->
		<!-- 										BorderThickness="{TemplateBinding BorderThickness}" -->
		<!-- 										BorderBrush="{TemplateBinding BorderBrush}" -->
		<!-- 										SnapsToDevicePixels="true" -->
		<!-- 										> -->
		<!-- 									<Border.Style> -->
		<!-- 										<Style TargetType="{x:Type Border}"> -->
		<!-- 											<Setter Property="Background" Value="#666666" /> -->
		<!-- 											<Style.Triggers> -->
		<!-- 												<Trigger Property="IsMouseOver" Value="True"> -->
		<!-- 													<Setter Property="Background" Value="#888888"> -->
		<!-- 													</Setter> -->
		<!-- 												</Trigger> -->
		<!-- 											</Style.Triggers> -->
		<!-- 										</Style> -->
		<!-- 									</Border.Style> -->
		<!-- 									<ContentPresenter x:Name="PART_Header" -->
		<!-- 											ContentSource="Header" -->
		<!-- 											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" -->
		<!-- 											/> -->
		<!-- 								</Border> -->
		<!-- -->
		<!-- 								<ItemsPresenter x:Name="ItemsHost" /> -->
		<!-- 							</VirtualizingStackPanel> -->
		<!-- 						</Border> -->
		<!-- -->
		<!-- 					</Border> -->
		<!-- -->
		<!-- 				</Grid> -->
		<!-- 				<ControlTemplate.Triggers> -->
		<!-- 					<Trigger Property="IsExpanded" Value="false"> -->
		<!-- 						<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" /> -->
		<!-- 					</Trigger> -->
		<!-- 					<Trigger Property="HasItems" Value="false"> -->
		<!-- 						<Setter TargetName="Expander" Property="Visibility" Value="Hidden" /> -->
		<!-- 					</Trigger> -->
		<!-- -->
		<!-- 					<MultiTrigger> -->
		<!-- 						<MultiTrigger.Conditions> -->
		<!-- 							~1~  false  @1@ -->
		<!-- 							<Condition Property="Selector.IsSelectionActive" Value="false" /> -->
		<!-- 							~1~  true  @1@ -->
		<!-- 							<Condition Property="IsSelected" Value="True" /> -->
		<!-- 						</MultiTrigger.Conditions> -->
		<!-- 						<Setter TargetName="Bd" Property="Background" Value="#444444" /> -->
		<!-- 					</MultiTrigger> -->
		<!-- 					<MultiTrigger> -->
		<!-- 						<MultiTrigger.Conditions> -->
		<!-- 							~1~  true  @1@ -->
		<!-- 							<Condition Property="Selector.IsSelectionActive" Value="true" /> -->
		<!-- 							~1~  true  @1@ -->
		<!-- 							<Condition Property="IsSelected" Value="true" /> -->
		<!-- 						</MultiTrigger.Conditions> -->
		<!-- 						<Setter TargetName="Bd" Property="Background" Value="#555555" /> -->
		<!-- 					</MultiTrigger> -->
		<!-- 					<Trigger Property="IsEnabled" Value="False"> -->
		<!-- 						<Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" /> -->
		<!-- 					</Trigger> -->
		<!-- -->
		<!-- 				</ControlTemplate.Triggers> -->
		<!-- 			</ControlTemplate> -->
		<!-- -->
		<!-- -->
		<!-- 		</Setter.Value> -->
		<!-- 	</Setter> -->
		<!-- 	<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" /> -->
		<!-- 	<Style.Triggers> -->
		<!-- 		<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true"> -->
		<!-- 			<Setter Property="ItemsPanel"> -->
		<!-- 				<Setter.Value> -->
		<!-- 					<ItemsPanelTemplate> -->
		<!-- 						<VirtualizingStackPanel /> -->
		<!-- 					</ItemsPanelTemplate> -->
		<!-- 				</Setter.Value> -->
		<!-- 			</Setter> -->
		<!-- 		</Trigger> -->
		<!-- 	</Style.Triggers> -->
		<!-- </Style> -->



		<!--#endregion-->


		
		<!--  x:Key="TreeViewItemContainerStyle1"  -->

		<Style 


				TargetType="{x:Type TreeViewItem}">

			<Setter Property="Width" Value="Auto" />
			<Setter Property="Background" Value="Transparent" />
			<!-- <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" /> -->
			<Setter Property="HorizontalContentAlignment" Value="Stretch" />
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
			<Setter Property="Padding" Value="1,0,0,0" />
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
			<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate x:Name="CTX"
							TargetType="{x:Type TreeViewItem}"
							>
						<Grid x:Name="TviGrid"
								HorizontalAlignment="Stretch"
								>
							<Grid.ColumnDefinitions>
								<ColumnDefinition
										Width="Auto"
										MinWidth="19"
										/>
								<!-- <ColumnDefinition Width="Auto"/> -->
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition />
							</Grid.RowDefinitions>
							<ToggleButton x:Name="Expander"
									ClickMode="Press"
									IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
									Style="{StaticResource ExpandCollapseToggleStyle}"
									/>
							<Border x:Name="Bd"
									Grid.Column="1"
									Grid.Row="0"
									Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									Padding="{TemplateBinding Padding}"
									SnapsToDevicePixels="true"
									HorizontalAlignment="Stretch"
									>
								<ContentPresenter x:Name="PART_Header"
										HorizontalAlignment="Stretch"
										ContentSource="Header"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										/>
								<!--  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  -->
							</Border>
							<ItemsPresenter x:Name="ItemsHost"
									Grid.Column="1"
									Grid.Row="1"
									HorizontalAlignment="Stretch"
									/>
							<!--  Grid.ColumnSpan="2"  -->
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsExpanded" Value="false">
								<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed" />
							</Trigger>
							<Trigger Property="HasItems" Value="false">
								<Setter Property="Visibility" TargetName="Expander" Value="Hidden" />
							</Trigger>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true" />
									<Condition Property="IsSelectionActive" Value="false" />
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
					<Setter Property="ItemsPanel">
						<Setter.Value>
							<ItemsPanelTemplate>
								<VirtualizingStackPanel />
							</ItemsPanelTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>


		<HierarchicalDataTemplate x:Key="ITEM">

			<DockPanel>
				<TextBlock
						Text="Title"
						Foreground="White"
				/>
				<TextBlock
						Margin="10,0,0,0"
						HorizontalAlignment="Right"
						Background="Black"
						Text="{Binding info1, Mode=TwoWay, FallbackValue='info 1 x'}"
						Foreground="White"
				/>
			</DockPanel>

		</HierarchicalDataTemplate>


	</Window.Resources>
	<Grid>



		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="2*" />
		</Grid.ColumnDefinitions>

		<Grid.RowDefinitions>
			<RowDefinition Height="60" />
			<RowDefinition Height="100" />
			<RowDefinition Height="100" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>


		<Button
				Content="Debug"
				Grid.Column="1"
				Grid.Row="3"
				Height="24"
				Width="90"
				VerticalAlignment="Bottom"
				HorizontalAlignment="Right"
				Click="BtnDebug_OnClick"
				/>

		<TextBox
				Grid.Column="0"
				Grid.Row="0"
				Grid.ColumnSpan="2"
				Background="Transparent"
				Foreground="White"
				Text="Attempts to get a treeview to stretch across its width &#013; and this also has methods to bind to data in different ways&#013;and how to use the item and header templates"
				TextWrapping="Wrap"
				/>


		<TreeView x:Name="Tv1"
				Grid.Column="0"
				Grid.Row="1"
				Margin="0"
				d:ItemsSource="{d:SampleData ItemCount=3}"
				Background="Transparent"
				HorizontalAlignment="Stretch"
				HorizontalContentAlignment="Stretch"
				ItemsSource="{Binding InfoCollection}"
				>
			<!--  ItemContainerStyle="{DynamicResource TreeViewItemContainerStyle1}"  -->
			<TreeView.ItemTemplate>
				<DataTemplate x:Name="DATA"
						DataType="{x:Type local:info}"
						>
					<TreeViewItem

							HorizontalAlignment="Stretch"
							HorizontalContentAlignment="Stretch"
							ItemsSource="{Binding IC}"
					>

						<TreeViewItem.HeaderTemplate>
							<HierarchicalDataTemplate x:Name="HEADER"
									DataType="{x:Type local:info}"
									>
								<DockPanel
										HorizontalAlignment="Stretch"
										DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"
										>
									<TextBlock
											Text="Title"
											Foreground="White"
											/>
									<TextBlock
											Margin="10,0,0,0"
											Background="#5050f0"
											HorizontalAlignment="Right"
											Text="{Binding info1, Mode=TwoWay, FallbackValue='info 1 x'}"
											Foreground="White"
											/>
								</DockPanel>

							</HierarchicalDataTemplate>
						</TreeViewItem.HeaderTemplate>


						<TreeViewItem.ItemTemplate>
							<HierarchicalDataTemplate x:Name="ITEM">
						
								<DockPanel>
									<TextBlock
											Text="Title"
											Foreground="White"
											/>
									<TextBlock
											Margin="10,0,0,0"
											HorizontalAlignment="Right"
											Background="Black"
											Text="{Binding info1, Mode=TwoWay, FallbackValue='info 1 x'}"
											Foreground="White"
											/>
								</DockPanel>
						
							</HierarchicalDataTemplate>
						</TreeViewItem.ItemTemplate>



					</TreeViewItem>

				</DataTemplate>
			</TreeView.ItemTemplate>

		</TreeView>

		<!--
			the
			below are 2 alternate treeview examples but they will not play nice with this final design for Tv1
		-->


		<!--    -->
		<!--  <TreeView x:Name="Tv2"  -->
		<!--  Grid.Column="0"  -->
		<!--  Grid.Row="2"  -->
		<!--  Margin="5"  -->
		<!--  d:ItemsSource="{d:SampleData ItemCount=3}"  -->
		<!--  ItemsSource="{Binding InfoCollection}"  -->
		<!--  ItemContainerStyle="{StaticResource TreeViewItemStyle1}"  -->
		<!--  HorizontalContentAlignment="Stretch"  -->
		<!--  HorizontalAlignment="Stretch"  -->
		<!--    -->
		<!--  >  -->
		<!--    -->
		<!--    -->
		<!-- </TreeView> -->
		<!--    -->
		<!--  <TreeView x:Name="Tv3"  -->
		<!--  Grid.Column="0"  -->
		<!--  Grid.Row="3"  -->
		<!--  Margin="5"  -->
		<!--  HorizontalAlignment="Stretch"  -->
		<!--  HorizontalContentAlignment="Stretch"  -->
		<!--  d:ItemsSource="{d:SampleData ItemCount=3}"  -->
		<!--  Background="#222222"  -->
		<!--  ScrollViewer.HorizontalScrollBarVisibility="Auto"  -->
		<!--  ItemsSource="{Binding InfoCollection}"  -->
		<!--  ItemContainerStyle="{StaticResource Tv1ItemContainerStyle1}"  -->
		<!--  Style="{StaticResource Tv1Style1}"  -->
		<!--  >  -->
		<!--    -->
		<!-- 	<TreeView.ItemTemplate> -->
		<!-- 		<DataTemplate> -->
		<!--  <TreeViewItem  -->
		<!--  ItemsSource="{Binding IC}"  -->
		<!--  HeaderTemplate="{DynamicResource temp1}"  -->
		<!--  ItemTemplate="{DynamicResource temp2}"  -->
		<!--  >  -->
		<!--    -->
		<!-- 			</TreeViewItem> -->
		<!-- 		</DataTemplate> -->
		<!-- 	</TreeView.ItemTemplate> -->
		<!--    -->
		<!-- 	<TreeView.Resources> -->
		<!--    -->
		<!--    -->
		<!--    -->
		<!--    -->
		<!--  ~1~  header  @1@  -->
		<!-- 		<HierarchicalDataTemplate x:Key="temp1"> -->
		<!--  <Grid  -->
		<!--  DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"  -->
		<!--  HorizontalAlignment="Stretch"  -->
		<!--  >  -->
		<!-- 				<Grid.ColumnDefinitions> -->
		<!-- 					<ColumnDefinition Width="Auto" /> -->
		<!-- 					<ColumnDefinition /> -->
		<!-- 					<ColumnDefinition Width="Auto" /> -->
		<!-- 				</Grid.ColumnDefinitions> -->
		<!--    -->
		<!-- 				<Grid.RowDefinitions> -->
		<!-- 					<RowDefinition Height="*" /> -->
		<!-- 				</Grid.RowDefinitions> -->
		<!--    -->
		<!--  <DockPanel  -->
		<!--  Grid.Column="0"  -->
		<!--  Grid.Row="0"  -->
		<!--  >  -->
		<!--  <TextBlock  -->
		<!--  MinWidth="40"  -->
		<!--  Text="{Binding info1, Mode=TwoWay, FallbackValue='info 2 x'}"  -->
		<!--  Background="PaleTurquoise"  -->
		<!--  />  -->
		<!--    -->
		<!--  <TextBlock  -->
		<!--  MinWidth="40"  -->
		<!--  Text="{Binding info2, Mode=TwoWay, FallbackValue='info 2 x'}"  -->
		<!--  Background="PaleTurquoise"  -->
		<!--  />  -->
		<!-- 				</DockPanel> -->
		<!--    -->
		<!--    -->
		<!--  <TextBlock  -->
		<!--  Grid.Column="2"  -->
		<!--  Grid.Row="0"  -->
		<!--  MinWidth="40"  -->
		<!--  Text="{Binding info2, Mode=TwoWay, FallbackValue='info 2 x'}"  -->
		<!--  Background="PaleTurquoise"  -->
		<!--  />  -->
		<!--    -->
		<!-- 			</Grid> -->
		<!--    -->
		<!-- 		</HierarchicalDataTemplate> -->
		<!--    -->
		<!--    -->
		<!--  ~1~  item  @1@  -->
		<!--  <HierarchicalDataTemplate x:Key="temp2"  -->
		<!--  ItemsSource="{Binding InfoCollection}"  -->
		<!--  >  -->
		<!-- 			<Grid> -->
		<!-- 				<Grid.ColumnDefinitions> -->
		<!-- 					<ColumnDefinition Width="Auto" /> -->
		<!-- 					<ColumnDefinition /> -->
		<!-- 					<ColumnDefinition Width="Auto" /> -->
		<!-- 				</Grid.ColumnDefinitions> -->
		<!--    -->
		<!-- 				<Grid.RowDefinitions> -->
		<!-- 					<RowDefinition Height="*" /> -->
		<!-- 				</Grid.RowDefinitions> -->
		<!--    -->
		<!--  <TextBlock  -->
		<!--  Grid.Column="0"  -->
		<!--  Grid.Row="0"  -->
		<!--  MinWidth="40"  -->
		<!--  Text="{Binding info1, Mode=TwoWay, FallbackValue='info 1 x'}"  -->
		<!--  Background="PaleTurquoise"  -->
		<!--  />  -->
		<!--    -->
		<!--  <TextBlock  -->
		<!--  Grid.Column="1"  -->
		<!--  Grid.Row="0"  -->
		<!--  MinWidth="40"  -->
		<!--  Text="{Binding info2, Mode=TwoWay, FallbackValue='info 1 x'}"  -->
		<!--  Background="PaleTurquoise"  -->
		<!--  />  -->
		<!--    -->
		<!--  <TextBlock  -->
		<!--  Grid.Column="2"  -->
		<!--  Grid.Row="0"  -->
		<!--  MinWidth="40"  -->
		<!--  Text="{Binding info2, Mode=TwoWay, FallbackValue='info 1 x'}"  -->
		<!--  Background="PaleTurquoise"  -->
		<!--  />  -->
		<!--    -->
		<!--    -->
		<!--    -->
		<!-- 			</Grid> -->
		<!-- 		</HierarchicalDataTemplate> -->
		<!--    -->
		<!--    -->
		<!-- 	</TreeView.Resources> -->
		<!--    -->
		<!--    -->
		<!-- </TreeView> -->
		<!--    -->


	</Grid>
</Window>
