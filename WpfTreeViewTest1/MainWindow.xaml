<Window
		x:Class="WpfTreeViewTest1.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:local="clr-namespace:WpfTreeViewTest1"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		x:Name="WinMain"
		Title="MainWindow"
		Height="450"
		Width="800"
		mc:Ignorable="d"
		DataContext="{Binding ElementName=WinMain}"
		Background="#444444"
		>

	<Window.Resources>

		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<!-- <ResourceDictionary Source="Windows/Support/CsTreeView.xaml" /> -->
			</ResourceDictionary.MergedDictionaries>


		

	<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181" />
	<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7" />
	<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB" />
	<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626" />
	<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959" />
	<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7" />
	<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB" />

	<PathGeometry x:Key="TreeArrow"
			Figures="M0,0 L0,6 L6,0 z"
			/>

	<Style x:Key="ExpandCollapseToggleStyle"
			TargetType="{x:Type ToggleButton}"
			>
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Width" Value="16" />
		<Setter Property="Height" Value="16" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border
							Height="16"
							Width="16"
							Background="PaleTurquoise"
							Padding="5,5,5,5"
							>

						<Path x:Name="ExpandPath"
								Data="{StaticResource TreeArrow}"
								Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}"
								Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}"
								>
							<Path.RenderTransform>
								<RotateTransform Angle="135" CenterY="3" CenterX="3" />
							</Path.RenderTransform>
						</Path>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="RenderTransform" TargetName="ExpandPath">
								<Setter.Value>
									<RotateTransform Angle="180" CenterY="3" CenterX="3" />
								</Setter.Value>
							</Setter>
							<Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}" />
							<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" />
							<Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True" />
								<Condition Property="IsChecked" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" />
							<Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="TreeViewItemFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- <Style x:Key="TreeViewItemContainerStyle1" -->
	<!-- 		TargetType="{x:Type TreeViewItem}" -->
	<!-- > -->

	<Style
			x:Key="x"
			TargetType="{x:Type TreeViewItem}"
			>
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Padding" Value="1,0,0,0" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
		<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeViewItem}">
					<Grid
					Margin="-5,0,0,0"
							>
						<Grid.ColumnDefinitions>
							<ColumnDefinition
									Width="Auto"
									MinWidth="19"
									/>
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition />
						</Grid.RowDefinitions>
						<ToggleButton x:Name="Expander"
								Grid.Column="0"
								Grid.Row="0"
								ClickMode="Press"
								Background="Red"
								IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
								Style="{StaticResource ExpandCollapseToggleStyle}"
								/>
						<Border x:Name="Bd"
								Grid.Column="1"
								Grid.Row="0"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Padding="{TemplateBinding Padding}"
								SnapsToDevicePixels="true"
								>
							<ContentPresenter x:Name="PART_Header"
									ContentSource="Header"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									/>
						</Border>
						<ItemsPresenter x:Name="ItemsHost"
								Grid.Column="1"
								Grid.Row="1"
								
								/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="false">
							<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed" />
						</Trigger>
						<Trigger Property="HasItems" Value="false">
							<Setter Property="Visibility" TargetName="Expander" Value="Hidden" />
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true" />
								<Condition Property="IsSelectionActive" Value="false" />
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel />
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

		</ResourceDictionary>
	</Window.Resources>

	<Grid>

		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>

		<Grid.RowDefinitions>
			<RowDefinition Height="30" />
			<RowDefinition Height="*" />
			<RowDefinition Height="40" />
		</Grid.RowDefinitions>

		<TreeView
				Grid.Column="0"
				Grid.Row="1"
				Height="300"
				d:ItemsSource="{d:SampleData ItemCount=3}"
				ItemsSource="{Binding SetgTree.TreeItems}"
				Margin="0"
				Padding="0"
				HorizontalContentAlignment="Stretch"
				VerticalAlignment="Top"

				>

			<TreeView.ItemTemplate>
				<DataTemplate>

					<TreeViewItem
							ItemsSource="{Binding TreeItems}"
							>
							<TreeViewItem.HeaderTemplate>
								<DataTemplate>

								<Grid>

								</Grid>

								</DataTemplate>
							</TreeViewItem.HeaderTemplate>


					</TreeViewItem>


				</DataTemplate>
			</TreeView.ItemTemplate>

		</TreeView>

	</Grid>
</Window>
